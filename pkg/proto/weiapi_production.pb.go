// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: weiapi_production.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OnlineProductInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 产线代号
	ProductionLine string `protobuf:"bytes,1,opt,name=productionLine,proto3" json:"productionLine"`
	// 产品工单号
	ProductOrderNo string `protobuf:"bytes,2,opt,name=productOrderNo,proto3" json:"productOrderNo"`
	// 产品序列号
	ProductSerialNo string `protobuf:"bytes,4,opt,name=productSerialNo,proto3" json:"productSerialNo"`
	// 载具号
	TrayNo string `protobuf:"bytes,5,opt,name=trayNo,proto3" json:"trayNo"`
}

func (x *OnlineProductInfoRequest) Reset() {
	*x = OnlineProductInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineProductInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineProductInfoRequest) ProtoMessage() {}

func (x *OnlineProductInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineProductInfoRequest.ProtoReflect.Descriptor instead.
func (*OnlineProductInfoRequest) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{0}
}

func (x *OnlineProductInfoRequest) GetProductionLine() string {
	if x != nil {
		return x.ProductionLine
	}
	return ""
}

func (x *OnlineProductInfoRequest) GetProductOrderNo() string {
	if x != nil {
		return x.ProductOrderNo
	}
	return ""
}

func (x *OnlineProductInfoRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *OnlineProductInfoRequest) GetTrayNo() string {
	if x != nil {
		return x.TrayNo
	}
	return ""
}

type EnterProductionStationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 工位代号
	ProductionStation string `protobuf:"bytes,1,opt,name=productionStation,proto3" json:"productionStation"`
	// 载具号
	TrayNo string `protobuf:"bytes,2,opt,name=trayNo,proto3" json:"trayNo"`
	// 产品序列号
	ProductSerialNo string `protobuf:"bytes,3,opt,name=productSerialNo,proto3" json:"productSerialNo"`
	// 包装箱号
	PackageNo string `protobuf:"bytes,4,opt,name=packageNo,proto3" json:"packageNo"`
}

func (x *EnterProductionStationRequest) Reset() {
	*x = EnterProductionStationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterProductionStationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterProductionStationRequest) ProtoMessage() {}

func (x *EnterProductionStationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterProductionStationRequest.ProtoReflect.Descriptor instead.
func (*EnterProductionStationRequest) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{1}
}

func (x *EnterProductionStationRequest) GetProductionStation() string {
	if x != nil {
		return x.ProductionStation
	}
	return ""
}

func (x *EnterProductionStationRequest) GetTrayNo() string {
	if x != nil {
		return x.TrayNo
	}
	return ""
}

func (x *EnterProductionStationRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *EnterProductionStationRequest) GetPackageNo() string {
	if x != nil {
		return x.PackageNo
	}
	return ""
}

type EnterProductionStationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *EnterProductionStationData `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *EnterProductionStationResponse) Reset() {
	*x = EnterProductionStationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterProductionStationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterProductionStationResponse) ProtoMessage() {}

func (x *EnterProductionStationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterProductionStationResponse.ProtoReflect.Descriptor instead.
func (*EnterProductionStationResponse) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{2}
}

func (x *EnterProductionStationResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EnterProductionStationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EnterProductionStationResponse) GetData() *EnterProductionStationData {
	if x != nil {
		return x.Data
	}
	return nil
}

type EnterProductionStationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Toward              int32                       `protobuf:"varint,1,opt,name=toward,proto3" json:"toward"`
	ProductOrderNo      string                      `protobuf:"bytes,2,opt,name=productOrderNo,proto3" json:"productOrderNo"`
	ProductSerialNo     string                      `protobuf:"bytes,3,opt,name=productSerialNo,proto3" json:"productSerialNo"`
	SalesOrderNo        string                      `protobuf:"bytes,4,opt,name=salesOrderNo,proto3" json:"salesOrderNo"`
	ItemNo              string                      `protobuf:"bytes,5,opt,name=itemNo,proto3" json:"itemNo"`
	OrderTime           string                      `protobuf:"bytes,6,opt,name=orderTime,proto3" json:"orderTime"`
	ProductCategory     string                      `protobuf:"bytes,7,opt,name=productCategory,proto3" json:"productCategory"`
	ProductModel        string                      `protobuf:"bytes,8,opt,name=productModel,proto3" json:"productModel"`
	MaterialNo          string                      `protobuf:"bytes,9,opt,name=materialNo,proto3" json:"materialNo"`
	MaterialDescription string                      `protobuf:"bytes,10,opt,name=materialDescription,proto3" json:"materialDescription"`
	CurrentState        string                      `protobuf:"bytes,11,opt,name=currentState,proto3" json:"currentState"`
	PropertyBrief       string                      `protobuf:"bytes,12,opt,name=propertyBrief,proto3" json:"propertyBrief"`
	Remark              string                      `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark"`
	ProductionProcess   *EnterProductionStationInfo `protobuf:"bytes,14,opt,name=productionProcess,proto3" json:"productionProcess"`
}

func (x *EnterProductionStationData) Reset() {
	*x = EnterProductionStationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterProductionStationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterProductionStationData) ProtoMessage() {}

func (x *EnterProductionStationData) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterProductionStationData.ProtoReflect.Descriptor instead.
func (*EnterProductionStationData) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{3}
}

func (x *EnterProductionStationData) GetToward() int32 {
	if x != nil {
		return x.Toward
	}
	return 0
}

func (x *EnterProductionStationData) GetProductOrderNo() string {
	if x != nil {
		return x.ProductOrderNo
	}
	return ""
}

func (x *EnterProductionStationData) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *EnterProductionStationData) GetSalesOrderNo() string {
	if x != nil {
		return x.SalesOrderNo
	}
	return ""
}

func (x *EnterProductionStationData) GetItemNo() string {
	if x != nil {
		return x.ItemNo
	}
	return ""
}

func (x *EnterProductionStationData) GetOrderTime() string {
	if x != nil {
		return x.OrderTime
	}
	return ""
}

func (x *EnterProductionStationData) GetProductCategory() string {
	if x != nil {
		return x.ProductCategory
	}
	return ""
}

func (x *EnterProductionStationData) GetProductModel() string {
	if x != nil {
		return x.ProductModel
	}
	return ""
}

func (x *EnterProductionStationData) GetMaterialNo() string {
	if x != nil {
		return x.MaterialNo
	}
	return ""
}

func (x *EnterProductionStationData) GetMaterialDescription() string {
	if x != nil {
		return x.MaterialDescription
	}
	return ""
}

func (x *EnterProductionStationData) GetCurrentState() string {
	if x != nil {
		return x.CurrentState
	}
	return ""
}

func (x *EnterProductionStationData) GetPropertyBrief() string {
	if x != nil {
		return x.PropertyBrief
	}
	return ""
}

func (x *EnterProductionStationData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *EnterProductionStationData) GetProductionProcess() *EnterProductionStationInfo {
	if x != nil {
		return x.ProductionProcess
	}
	return nil
}

type EnterProductionStationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description"`
	Identifier  string `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier"`
	SopLink     string `protobuf:"bytes,4,opt,name=sopLink,proto3" json:"sopLink"`
}

func (x *EnterProductionStationInfo) Reset() {
	*x = EnterProductionStationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterProductionStationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterProductionStationInfo) ProtoMessage() {}

func (x *EnterProductionStationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterProductionStationInfo.ProtoReflect.Descriptor instead.
func (*EnterProductionStationInfo) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{4}
}

func (x *EnterProductionStationInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EnterProductionStationInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EnterProductionStationInfo) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *EnterProductionStationInfo) GetSopLink() string {
	if x != nil {
		return x.SopLink
	}
	return ""
}

type ExitProductionStationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 工位代号
	ProductionStation string `protobuf:"bytes,1,opt,name=productionStation,proto3" json:"productionStation"`
	// 载具号
	TrayNo string `protobuf:"bytes,2,opt,name=trayNo,proto3" json:"trayNo"`
	// 产品序列号
	ProductSerialNo string `protobuf:"bytes,3,opt,name=productSerialNo,proto3" json:"productSerialNo"`
	// 包装箱号
	PackageNo string `protobuf:"bytes,4,opt,name=packageNo,proto3" json:"packageNo"`
	// 是否失败
	IsFail bool `protobuf:"varint,5,opt,name=isFail,proto3" json:"isFail"`
	// 是否返工
	IsRework bool `protobuf:"varint,6,opt,name=isRework,proto3" json:"isRework"`
	// 返工原因
	ReworkReason string `protobuf:"bytes,7,opt,name=reworkReason,proto3" json:"reworkReason"`
	// 等待时长
	WaitTime int32 `protobuf:"varint,8,opt,name=waitTime,proto3" json:"waitTime"`
	// 是否解除载具
	UnbindTray bool `protobuf:"varint,9,opt,name=unbindTray,proto3" json:"unbindTray"`
}

func (x *ExitProductionStationRequest) Reset() {
	*x = ExitProductionStationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitProductionStationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitProductionStationRequest) ProtoMessage() {}

func (x *ExitProductionStationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitProductionStationRequest.ProtoReflect.Descriptor instead.
func (*ExitProductionStationRequest) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{5}
}

func (x *ExitProductionStationRequest) GetProductionStation() string {
	if x != nil {
		return x.ProductionStation
	}
	return ""
}

func (x *ExitProductionStationRequest) GetTrayNo() string {
	if x != nil {
		return x.TrayNo
	}
	return ""
}

func (x *ExitProductionStationRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *ExitProductionStationRequest) GetPackageNo() string {
	if x != nil {
		return x.PackageNo
	}
	return ""
}

func (x *ExitProductionStationRequest) GetIsFail() bool {
	if x != nil {
		return x.IsFail
	}
	return false
}

func (x *ExitProductionStationRequest) GetIsRework() bool {
	if x != nil {
		return x.IsRework
	}
	return false
}

func (x *ExitProductionStationRequest) GetReworkReason() string {
	if x != nil {
		return x.ReworkReason
	}
	return ""
}

func (x *ExitProductionStationRequest) GetWaitTime() int32 {
	if x != nil {
		return x.WaitTime
	}
	return 0
}

func (x *ExitProductionStationRequest) GetUnbindTray() bool {
	if x != nil {
		return x.UnbindTray
	}
	return false
}

type CreateProductTestRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSerialNo   string `protobuf:"bytes,1,opt,name=productSerialNo,proto3" json:"productSerialNo"`
	ProductionStation string `protobuf:"bytes,2,opt,name=productionStation,proto3" json:"productionStation"`
	TestProject       string `protobuf:"bytes,3,opt,name=testProject,proto3" json:"testProject"`
	TestStartTime     string `protobuf:"bytes,4,opt,name=testStartTime,proto3" json:"testStartTime"`
	TestEndTime       string `protobuf:"bytes,5,opt,name=testEndTime,proto3" json:"testEndTime"`
	TestData          string `protobuf:"bytes,6,opt,name=testData,proto3" json:"testData"`
	IsQualified       bool   `protobuf:"varint,7,opt,name=isQualified,proto3" json:"isQualified"`
}

func (x *CreateProductTestRecordRequest) Reset() {
	*x = CreateProductTestRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductTestRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductTestRecordRequest) ProtoMessage() {}

func (x *CreateProductTestRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductTestRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateProductTestRecordRequest) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{6}
}

func (x *CreateProductTestRecordRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *CreateProductTestRecordRequest) GetProductionStation() string {
	if x != nil {
		return x.ProductionStation
	}
	return ""
}

func (x *CreateProductTestRecordRequest) GetTestProject() string {
	if x != nil {
		return x.TestProject
	}
	return ""
}

func (x *CreateProductTestRecordRequest) GetTestStartTime() string {
	if x != nil {
		return x.TestStartTime
	}
	return ""
}

func (x *CreateProductTestRecordRequest) GetTestEndTime() string {
	if x != nil {
		return x.TestEndTime
	}
	return ""
}

func (x *CreateProductTestRecordRequest) GetTestData() string {
	if x != nil {
		return x.TestData
	}
	return ""
}

func (x *CreateProductTestRecordRequest) GetIsQualified() bool {
	if x != nil {
		return x.IsQualified
	}
	return false
}

type CheckProductProcessRouteFailureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductionStation string `protobuf:"bytes,1,opt,name=productionStation,proto3" json:"productionStation"`
	ProductSerialNo   string `protobuf:"bytes,2,opt,name=productSerialNo,proto3" json:"productSerialNo"`
	// 默认为1，1表示重试，2表示返工，3表示忽略跳过
	HandleMethod int32 `protobuf:"varint,3,opt,name=handleMethod,proto3" json:"handleMethod"`
}

func (x *CheckProductProcessRouteFailureRequest) Reset() {
	*x = CheckProductProcessRouteFailureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckProductProcessRouteFailureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckProductProcessRouteFailureRequest) ProtoMessage() {}

func (x *CheckProductProcessRouteFailureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckProductProcessRouteFailureRequest.ProtoReflect.Descriptor instead.
func (*CheckProductProcessRouteFailureRequest) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{7}
}

func (x *CheckProductProcessRouteFailureRequest) GetProductionStation() string {
	if x != nil {
		return x.ProductionStation
	}
	return ""
}

func (x *CheckProductProcessRouteFailureRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *CheckProductProcessRouteFailureRequest) GetHandleMethod() int32 {
	if x != nil {
		return x.HandleMethod
	}
	return 0
}

type GetProductionProcessStepWithParameterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 生产工站代号
	ProductionStation string `protobuf:"bytes,1,opt,name=productionStation,proto3" json:"productionStation"`
	// 载具识别码
	TrayNo string `protobuf:"bytes,2,opt,name=trayNo,proto3" json:"trayNo"`
	// 产品序列号
	ProductSerialNo string `protobuf:"bytes,3,opt,name=productSerialNo,proto3" json:"productSerialNo"`
}

func (x *GetProductionProcessStepWithParameterRequest) Reset() {
	*x = GetProductionProcessStepWithParameterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductionProcessStepWithParameterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductionProcessStepWithParameterRequest) ProtoMessage() {}

func (x *GetProductionProcessStepWithParameterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductionProcessStepWithParameterRequest.ProtoReflect.Descriptor instead.
func (*GetProductionProcessStepWithParameterRequest) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{8}
}

func (x *GetProductionProcessStepWithParameterRequest) GetProductionStation() string {
	if x != nil {
		return x.ProductionStation
	}
	return ""
}

func (x *GetProductionProcessStepWithParameterRequest) GetTrayNo() string {
	if x != nil {
		return x.TrayNo
	}
	return ""
}

func (x *GetProductionProcessStepWithParameterRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

type GetProductionProcessStepWithParameterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                                      `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message string                                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *GetProductionProcessStepWithParameterData `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetProductionProcessStepWithParameterResponse) Reset() {
	*x = GetProductionProcessStepWithParameterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductionProcessStepWithParameterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductionProcessStepWithParameterResponse) ProtoMessage() {}

func (x *GetProductionProcessStepWithParameterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductionProcessStepWithParameterResponse.ProtoReflect.Descriptor instead.
func (*GetProductionProcessStepWithParameterResponse) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{9}
}

func (x *GetProductionProcessStepWithParameterResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetProductionProcessStepWithParameterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductionProcessStepWithParameterResponse) GetData() *GetProductionProcessStepWithParameterData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductionProcessStepWithParameterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductOrder           *ProductOrderInfo            `protobuf:"bytes,1,opt,name=productOrder,proto3" json:"productOrder"`
	ProductInfo            *ProductInfoInfo             `protobuf:"bytes,2,opt,name=productInfo,proto3" json:"productInfo"`
	ProductOrderBoms       []*ProductOrderBomInfo       `protobuf:"bytes,3,rep,name=productOrderBoms,proto3" json:"productOrderBoms"`
	MaterialChannelLayers  []*MaterialChannelLayerInfo  `protobuf:"bytes,4,rep,name=materialChannelLayers,proto3" json:"materialChannelLayers"`
	ProductionProcessSteps []*ProductionProcessStepInfo `protobuf:"bytes,5,rep,name=productionProcessSteps,proto3" json:"productionProcessSteps"`
	ProductOrderAttributes []*ProductOrderAttributeInfo `protobuf:"bytes,6,rep,name=productOrderAttributes,proto3" json:"productOrderAttributes"`
}

func (x *GetProductionProcessStepWithParameterData) Reset() {
	*x = GetProductionProcessStepWithParameterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductionProcessStepWithParameterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductionProcessStepWithParameterData) ProtoMessage() {}

func (x *GetProductionProcessStepWithParameterData) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductionProcessStepWithParameterData.ProtoReflect.Descriptor instead.
func (*GetProductionProcessStepWithParameterData) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{10}
}

func (x *GetProductionProcessStepWithParameterData) GetProductOrder() *ProductOrderInfo {
	if x != nil {
		return x.ProductOrder
	}
	return nil
}

func (x *GetProductionProcessStepWithParameterData) GetProductInfo() *ProductInfoInfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

func (x *GetProductionProcessStepWithParameterData) GetProductOrderBoms() []*ProductOrderBomInfo {
	if x != nil {
		return x.ProductOrderBoms
	}
	return nil
}

func (x *GetProductionProcessStepWithParameterData) GetMaterialChannelLayers() []*MaterialChannelLayerInfo {
	if x != nil {
		return x.MaterialChannelLayers
	}
	return nil
}

func (x *GetProductionProcessStepWithParameterData) GetProductionProcessSteps() []*ProductionProcessStepInfo {
	if x != nil {
		return x.ProductionProcessSteps
	}
	return nil
}

func (x *GetProductionProcessStepWithParameterData) GetProductOrderAttributes() []*ProductOrderAttributeInfo {
	if x != nil {
		return x.ProductOrderAttributes
	}
	return nil
}

type CreateProductProcessRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 产品序列号
	ProductSerialNo string `protobuf:"bytes,1,opt,name=productSerialNo,proto3" json:"productSerialNo"`
	// 工位代号
	ProductionStation string `protobuf:"bytes,2,opt,name=productionStation,proto3" json:"productionStation"`
	// 作业类型
	ProcessStepType string `protobuf:"bytes,4,opt,name=processStepType,proto3" json:"processStepType"`
	// 作业描述
	WorkDescription string `protobuf:"bytes,5,opt,name=workDescription,proto3" json:"workDescription"`
	// 作业数据
	WorkData string `protobuf:"bytes,6,opt,name=workData,proto3" json:"workData"`
	// 作业结果
	WorkResult string `protobuf:"bytes,7,opt,name=workResult,proto3" json:"workResult"`
}

func (x *CreateProductProcessRecordRequest) Reset() {
	*x = CreateProductProcessRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductProcessRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductProcessRecordRequest) ProtoMessage() {}

func (x *CreateProductProcessRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductProcessRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateProductProcessRecordRequest) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{11}
}

func (x *CreateProductProcessRecordRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *CreateProductProcessRecordRequest) GetProductionStation() string {
	if x != nil {
		return x.ProductionStation
	}
	return ""
}

func (x *CreateProductProcessRecordRequest) GetProcessStepType() string {
	if x != nil {
		return x.ProcessStepType
	}
	return ""
}

func (x *CreateProductProcessRecordRequest) GetWorkDescription() string {
	if x != nil {
		return x.WorkDescription
	}
	return ""
}

func (x *CreateProductProcessRecordRequest) GetWorkData() string {
	if x != nil {
		return x.WorkData
	}
	return ""
}

func (x *CreateProductProcessRecordRequest) GetWorkResult() string {
	if x != nil {
		return x.WorkResult
	}
	return ""
}

type CreateProductWorkRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 产品序列号
	ProductSerialNo string `protobuf:"bytes,1,opt,name=productSerialNo,proto3" json:"productSerialNo"`
	// 产线工位
	ProductionStation string `protobuf:"bytes,2,opt,name=productionStation,proto3" json:"productionStation"`
	// 作业步骤
	ProductionProcessStep string `protobuf:"bytes,3,opt,name=productionProcessStep,proto3" json:"productionProcessStep"`
	// 起始时间
	WorkStartTime string `protobuf:"bytes,4,opt,name=workStartTime,proto3" json:"workStartTime"`
	// 结束时间
	WorkEndTime string `protobuf:"bytes,5,opt,name=workEndTime,proto3" json:"workEndTime"`
	// 作业数据
	WorkData string `protobuf:"bytes,6,opt,name=workData,proto3" json:"workData"`
	// 是否合格
	IsQualified bool `protobuf:"varint,7,opt,name=isQualified,proto3" json:"isQualified"`
}

func (x *CreateProductWorkRecordRequest) Reset() {
	*x = CreateProductWorkRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductWorkRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductWorkRecordRequest) ProtoMessage() {}

func (x *CreateProductWorkRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductWorkRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateProductWorkRecordRequest) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{12}
}

func (x *CreateProductWorkRecordRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *CreateProductWorkRecordRequest) GetProductionStation() string {
	if x != nil {
		return x.ProductionStation
	}
	return ""
}

func (x *CreateProductWorkRecordRequest) GetProductionProcessStep() string {
	if x != nil {
		return x.ProductionProcessStep
	}
	return ""
}

func (x *CreateProductWorkRecordRequest) GetWorkStartTime() string {
	if x != nil {
		return x.WorkStartTime
	}
	return ""
}

func (x *CreateProductWorkRecordRequest) GetWorkEndTime() string {
	if x != nil {
		return x.WorkEndTime
	}
	return ""
}

func (x *CreateProductWorkRecordRequest) GetWorkData() string {
	if x != nil {
		return x.WorkData
	}
	return ""
}

func (x *CreateProductWorkRecordRequest) GetIsQualified() bool {
	if x != nil {
		return x.IsQualified
	}
	return false
}

type RetrieveProductReworkRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 生产产线
	ProductionLine string `protobuf:"bytes,1,opt,name=productionLine,proto3" json:"productionLine"`
	// 产品序列号
	ProductSerialNo string `protobuf:"bytes,2,opt,name=productSerialNo,proto3" json:"productSerialNo"`
	// 起始日期
	StartDate string `protobuf:"bytes,3,opt,name=startDate,proto3" json:"startDate"`
	// 结束日期
	FinishDate string `protobuf:"bytes,4,opt,name=finishDate,proto3" json:"finishDate"`
	// 已返工完成
	IsCompleted bool `protobuf:"varint,5,opt,name=isCompleted,proto3" json:"isCompleted"`
}

func (x *RetrieveProductReworkRecordRequest) Reset() {
	*x = RetrieveProductReworkRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveProductReworkRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveProductReworkRecordRequest) ProtoMessage() {}

func (x *RetrieveProductReworkRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveProductReworkRecordRequest.ProtoReflect.Descriptor instead.
func (*RetrieveProductReworkRecordRequest) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{13}
}

func (x *RetrieveProductReworkRecordRequest) GetProductionLine() string {
	if x != nil {
		return x.ProductionLine
	}
	return ""
}

func (x *RetrieveProductReworkRecordRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *RetrieveProductReworkRecordRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *RetrieveProductReworkRecordRequest) GetFinishDate() string {
	if x != nil {
		return x.FinishDate
	}
	return ""
}

func (x *RetrieveProductReworkRecordRequest) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

type UpdateProductReworkRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返工记录ID
	ProductReworkRecordID string `protobuf:"bytes,1,opt,name=productReworkRecordID,proto3" json:"productReworkRecordID"`
	// 返工原因ID
	ProductReworkCauseID string `protobuf:"bytes,2,opt,name=productReworkCauseID,proto3" json:"productReworkCauseID"`
	// 返工解决方案ID
	ProductReworkSolutionID string `protobuf:"bytes,3,opt,name=productReworkSolutionID,proto3" json:"productReworkSolutionID"`
	// 返工类型ID
	ProductReworkTypeID string `protobuf:"bytes,4,opt,name=productReworkTypeID,proto3" json:"productReworkTypeID"`
	// 操作人员ID
	ProductReworkUserID string `protobuf:"bytes,5,opt,name=productReworkUserID,proto3" json:"productReworkUserID"`
	// 返工简述
	ReworkBrief string `protobuf:"bytes,6,opt,name=reworkBrief,proto3" json:"reworkBrief"`
	// 备注
	Remark          string                `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark"`
	MaterialRecords []*MaterialRecordInfo `protobuf:"bytes,8,rep,name=materialRecords,proto3" json:"materialRecords"`
}

func (x *UpdateProductReworkRecordRequest) Reset() {
	*x = UpdateProductReworkRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductReworkRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductReworkRecordRequest) ProtoMessage() {}

func (x *UpdateProductReworkRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductReworkRecordRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductReworkRecordRequest) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateProductReworkRecordRequest) GetProductReworkRecordID() string {
	if x != nil {
		return x.ProductReworkRecordID
	}
	return ""
}

func (x *UpdateProductReworkRecordRequest) GetProductReworkCauseID() string {
	if x != nil {
		return x.ProductReworkCauseID
	}
	return ""
}

func (x *UpdateProductReworkRecordRequest) GetProductReworkSolutionID() string {
	if x != nil {
		return x.ProductReworkSolutionID
	}
	return ""
}

func (x *UpdateProductReworkRecordRequest) GetProductReworkTypeID() string {
	if x != nil {
		return x.ProductReworkTypeID
	}
	return ""
}

func (x *UpdateProductReworkRecordRequest) GetProductReworkUserID() string {
	if x != nil {
		return x.ProductReworkUserID
	}
	return ""
}

func (x *UpdateProductReworkRecordRequest) GetReworkBrief() string {
	if x != nil {
		return x.ReworkBrief
	}
	return ""
}

func (x *UpdateProductReworkRecordRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateProductReworkRecordRequest) GetMaterialRecords() []*MaterialRecordInfo {
	if x != nil {
		return x.MaterialRecords
	}
	return nil
}

type MaterialRecordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductIssueRecordID string `protobuf:"bytes,1,opt,name=productIssueRecordID,proto3" json:"productIssueRecordID"`
	MaterialNo           string `protobuf:"bytes,2,opt,name=materialNo,proto3" json:"materialNo"`
	MaterialDescription  string `protobuf:"bytes,3,opt,name=materialDescription,proto3" json:"materialDescription"`
	ControlType          string `protobuf:"bytes,4,opt,name=controlType,proto3" json:"controlType"`
	OperationMode        string `protobuf:"bytes,5,opt,name=operationMode,proto3" json:"operationMode"`
	NewMaterialTraceNo   string `protobuf:"bytes,6,opt,name=newMaterialTraceNo,proto3" json:"newMaterialTraceNo"`
	OldMaterialTraceNo   string `protobuf:"bytes,7,opt,name=oldMaterialTraceNo,proto3" json:"oldMaterialTraceNo"`
}

func (x *MaterialRecordInfo) Reset() {
	*x = MaterialRecordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weiapi_production_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialRecordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialRecordInfo) ProtoMessage() {}

func (x *MaterialRecordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_weiapi_production_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialRecordInfo.ProtoReflect.Descriptor instead.
func (*MaterialRecordInfo) Descriptor() ([]byte, []int) {
	return file_weiapi_production_proto_rawDescGZIP(), []int{15}
}

func (x *MaterialRecordInfo) GetProductIssueRecordID() string {
	if x != nil {
		return x.ProductIssueRecordID
	}
	return ""
}

func (x *MaterialRecordInfo) GetMaterialNo() string {
	if x != nil {
		return x.MaterialNo
	}
	return ""
}

func (x *MaterialRecordInfo) GetMaterialDescription() string {
	if x != nil {
		return x.MaterialDescription
	}
	return ""
}

func (x *MaterialRecordInfo) GetControlType() string {
	if x != nil {
		return x.ControlType
	}
	return ""
}

func (x *MaterialRecordInfo) GetOperationMode() string {
	if x != nil {
		return x.OperationMode
	}
	return ""
}

func (x *MaterialRecordInfo) GetNewMaterialTraceNo() string {
	if x != nil {
		return x.NewMaterialTraceNo
	}
	return ""
}

func (x *MaterialRecordInfo) GetOldMaterialTraceNo() string {
	if x != nil {
		return x.OldMaterialTraceNo
	}
	return ""
}

var File_weiapi_production_proto protoreflect.FileDescriptor

var file_weiapi_production_proto_rawDesc = []byte{
	0x0a, 0x17, 0x77, 0x65, 0x69, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xac, 0x01, 0x0a, 0x18, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f,
	0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72,
	0x61, 0x79, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x61, 0x79,
	0x4e, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x1d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x79, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x61, 0x79, 0x4e, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x1e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb3, 0x04, 0x0a, 0x1a, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x4e,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x30, 0x0a, 0x13, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x4f, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x8c, 0x01, 0x0a, 0x1a, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x70, 0x4c, 0x69, 0x6e, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x22,
	0xc0, 0x02, 0x0a, 0x1c, 0x45, 0x78, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x72, 0x61, 0x79, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x72, 0x61, 0x79, 0x4e, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x52, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x69, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x61, 0x69, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x54, 0x72,
	0x61, 0x79, 0x22, 0xa0, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12,
	0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x26, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x9e, 0x01, 0x0a,
	0x2c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x72, 0x61, 0x79, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x61,
	0x79, 0x4e, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x22, 0xa3, 0x01,
	0x0a, 0x2d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70, 0x57, 0x69, 0x74, 0x68,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xf5, 0x03, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70,
	0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6d, 0x73,
	0x12, 0x55, 0x0a, 0x15, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x15, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x65, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70,
	0x73, 0x12, 0x58, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x8b, 0x02, 0x0a, 0x21,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x6f,
	0x72, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb4, 0x02, 0x0a, 0x1e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x65, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x22, 0xd6, 0x01, 0x0a, 0x22, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xa9, 0x03, 0x0a, 0x20, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x61, 0x75, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x43, 0x61, 0x75, 0x73, 0x65, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x43, 0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xc2, 0x02, 0x0a, 0x12, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x14,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f,
	0x12, 0x30, 0x0a, 0x13, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x65,
	0x77, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4e, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x6f, 0x6c,
	0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4e, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_weiapi_production_proto_rawDescOnce sync.Once
	file_weiapi_production_proto_rawDescData = file_weiapi_production_proto_rawDesc
)

func file_weiapi_production_proto_rawDescGZIP() []byte {
	file_weiapi_production_proto_rawDescOnce.Do(func() {
		file_weiapi_production_proto_rawDescData = protoimpl.X.CompressGZIP(file_weiapi_production_proto_rawDescData)
	})
	return file_weiapi_production_proto_rawDescData
}

var file_weiapi_production_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_weiapi_production_proto_goTypes = []interface{}{
	(*OnlineProductInfoRequest)(nil),                      // 0: proto.OnlineProductInfoRequest
	(*EnterProductionStationRequest)(nil),                 // 1: proto.EnterProductionStationRequest
	(*EnterProductionStationResponse)(nil),                // 2: proto.EnterProductionStationResponse
	(*EnterProductionStationData)(nil),                    // 3: proto.EnterProductionStationData
	(*EnterProductionStationInfo)(nil),                    // 4: proto.EnterProductionStationInfo
	(*ExitProductionStationRequest)(nil),                  // 5: proto.ExitProductionStationRequest
	(*CreateProductTestRecordRequest)(nil),                // 6: proto.CreateProductTestRecordRequest
	(*CheckProductProcessRouteFailureRequest)(nil),        // 7: proto.CheckProductProcessRouteFailureRequest
	(*GetProductionProcessStepWithParameterRequest)(nil),  // 8: proto.GetProductionProcessStepWithParameterRequest
	(*GetProductionProcessStepWithParameterResponse)(nil), // 9: proto.GetProductionProcessStepWithParameterResponse
	(*GetProductionProcessStepWithParameterData)(nil),     // 10: proto.GetProductionProcessStepWithParameterData
	(*CreateProductProcessRecordRequest)(nil),             // 11: proto.CreateProductProcessRecordRequest
	(*CreateProductWorkRecordRequest)(nil),                // 12: proto.CreateProductWorkRecordRequest
	(*RetrieveProductReworkRecordRequest)(nil),            // 13: proto.RetrieveProductReworkRecordRequest
	(*UpdateProductReworkRecordRequest)(nil),              // 14: proto.UpdateProductReworkRecordRequest
	(*MaterialRecordInfo)(nil),                            // 15: proto.MaterialRecordInfo
	(*ProductOrderInfo)(nil),                              // 16: proto.ProductOrderInfo
	(*ProductInfoInfo)(nil),                               // 17: proto.ProductInfoInfo
	(*ProductOrderBomInfo)(nil),                           // 18: proto.ProductOrderBomInfo
	(*MaterialChannelLayerInfo)(nil),                      // 19: proto.MaterialChannelLayerInfo
	(*ProductionProcessStepInfo)(nil),                     // 20: proto.ProductionProcessStepInfo
	(*ProductOrderAttributeInfo)(nil),                     // 21: proto.ProductOrderAttributeInfo
}
var file_weiapi_production_proto_depIdxs = []int32{
	3,  // 0: proto.EnterProductionStationResponse.data:type_name -> proto.EnterProductionStationData
	4,  // 1: proto.EnterProductionStationData.productionProcess:type_name -> proto.EnterProductionStationInfo
	10, // 2: proto.GetProductionProcessStepWithParameterResponse.data:type_name -> proto.GetProductionProcessStepWithParameterData
	16, // 3: proto.GetProductionProcessStepWithParameterData.productOrder:type_name -> proto.ProductOrderInfo
	17, // 4: proto.GetProductionProcessStepWithParameterData.productInfo:type_name -> proto.ProductInfoInfo
	18, // 5: proto.GetProductionProcessStepWithParameterData.productOrderBoms:type_name -> proto.ProductOrderBomInfo
	19, // 6: proto.GetProductionProcessStepWithParameterData.materialChannelLayers:type_name -> proto.MaterialChannelLayerInfo
	20, // 7: proto.GetProductionProcessStepWithParameterData.productionProcessSteps:type_name -> proto.ProductionProcessStepInfo
	21, // 8: proto.GetProductionProcessStepWithParameterData.productOrderAttributes:type_name -> proto.ProductOrderAttributeInfo
	15, // 9: proto.UpdateProductReworkRecordRequest.materialRecords:type_name -> proto.MaterialRecordInfo
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_weiapi_production_proto_init() }
func file_weiapi_production_proto_init() {
	if File_weiapi_production_proto != nil {
		return
	}
	file_product_order_proto_init()
	file_product_order_bom_proto_init()
	file_material_channel_layer_proto_init()
	file_production_line_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_weiapi_production_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineProductInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterProductionStationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterProductionStationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterProductionStationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterProductionStationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitProductionStationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductTestRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckProductProcessRouteFailureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductionProcessStepWithParameterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductionProcessStepWithParameterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductionProcessStepWithParameterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductProcessRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductWorkRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveProductReworkRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductReworkRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weiapi_production_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialRecordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_weiapi_production_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_weiapi_production_proto_goTypes,
		DependencyIndexes: file_weiapi_production_proto_depIdxs,
		MessageInfos:      file_weiapi_production_proto_msgTypes,
	}.Build()
	File_weiapi_production_proto = out.File
	file_weiapi_production_proto_rawDesc = nil
	file_weiapi_production_proto_goTypes = nil
	file_weiapi_production_proto_depIdxs = nil
}
