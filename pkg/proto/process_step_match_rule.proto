syntax="proto3";

package proto;
option go_package = "./;proto";

import "mom_common.proto";
import "attribute_expression.proto";
import "production_process_step.proto";

service ProcessStepMatchRule{
    rpc Query(QueryProcessStepMatchRuleRequest)returns(QueryProcessStepMatchRuleResponse){}
}

message ProcessStepMatchRuleInfo {
	//ID 
    string id=1;
    //生产产线ID
    string productionLineID=2;
	//优先级 
 	int32 priority=3;
	//采集组 
    string groupCode=4;
    //是否启用
    bool enable=5;
	//默认匹配 
 	bool initialValue=6;
	//描述 
 	string description=7;
	//备注 
 	string remark=8;
    repeated AttributeExpressionInfo AttributeExpressions=9;
    string productionProcessStepID=10;
    ProductionProcessStepInfo productionProcessStep=11;
}

message QueryProcessStepMatchRuleRequest{
    // @inject_tag: uri:"pageIndex" form:"pageIndex"
    int64 pageIndex=1;
    // @inject_tag: uri:"pageSize" form:"pageSize"
    int64 pageSize=2;
    // @inject_tag: uri:"sortConfig" form:"sortConfig"
    string sortConfig=3;
    // @inject_tag: uri:"productionLineID" form:"productionLineID"
    string productionLineID=4;
    // @inject_tag: uri:"enable" form:"enable"
    bool enable=5;
    // @inject_tag: uri:"hasProductionProcessStepID" form:"hasProductionProcessStepID"
    bool hasProductionProcessStepID=6;
    // @inject_tag: uri:"code" form:"code"
    string code=7;
}

message QueryProcessStepMatchRuleResponse{
    Code code=1;
    string message=2;
    repeated ProcessStepMatchRuleInfo data=3;
    int64 pages=4;
    int64 records=5;
    int64 total=6;
}

message GetAllProcessStepMatchRuleResponse{
    Code code=1;
    string message=2;
    repeated ProcessStepMatchRuleInfo data=3;
}

message GetProcessStepMatchRuleDetailResponse{
    Code code=1;
    string message=2;
    ProcessStepMatchRuleInfo data=3;
}