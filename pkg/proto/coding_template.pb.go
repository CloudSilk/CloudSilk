// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: coding_template.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CodingTemplateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 代号
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// 索引类型
	IndexType int32 `protobuf:"varint,3,opt,name=indexType,proto3" json:"indexType"`
	// 索引位数
	IndexBits int32 `protobuf:"varint,4,opt,name=indexBits,proto3" json:"indexBits"`
	// 描述
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
	// 备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark"`
	// 编码元素
	CodingElements []*CodingElementInfo `protobuf:"bytes,7,rep,name=codingElements,proto3" json:"codingElements"`
}

func (x *CodingTemplateInfo) Reset() {
	*x = CodingTemplateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coding_template_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodingTemplateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodingTemplateInfo) ProtoMessage() {}

func (x *CodingTemplateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_coding_template_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodingTemplateInfo.ProtoReflect.Descriptor instead.
func (*CodingTemplateInfo) Descriptor() ([]byte, []int) {
	return file_coding_template_proto_rawDescGZIP(), []int{0}
}

func (x *CodingTemplateInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CodingTemplateInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CodingTemplateInfo) GetIndexType() int32 {
	if x != nil {
		return x.IndexType
	}
	return 0
}

func (x *CodingTemplateInfo) GetIndexBits() int32 {
	if x != nil {
		return x.IndexBits
	}
	return 0
}

func (x *CodingTemplateInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CodingTemplateInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CodingTemplateInfo) GetCodingElements() []*CodingElementInfo {
	if x != nil {
		return x.CodingElements
	}
	return nil
}

type CodingElementInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 编码模板ID
	CodingTemplateID string `protobuf:"bytes,2,opt,name=CodingTemplateID,proto3" json:"CodingTemplateID"`
	// 顺序
	SortIndex int32 `protobuf:"varint,3,opt,name=SortIndex,proto3" json:"SortIndex"`
	// 名称
	Name string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name"`
	// 元素类型
	ElementType int32 `protobuf:"varint,5,opt,name=ElementType,proto3" json:"ElementType"`
	// 数据位数
	DataBits int32 `protobuf:"varint,6,opt,name=DataBits,proto3" json:"DataBits"`
	// 预设值
	DefaultValue string `protobuf:"bytes,7,opt,name=DefaultValue,proto3" json:"DefaultValue"`
	// 占位符
	PlaceHolder string `protobuf:"bytes,8,opt,name=PlaceHolder,proto3" json:"PlaceHolder"`
	// 备注
	Remark string `protobuf:"bytes,9,opt,name=Remark,proto3" json:"Remark"`
	// 编码元素值
	CodingElementValues []*CodingElementValueInfo `protobuf:"bytes,10,rep,name=codingElementValues,proto3" json:"codingElementValues"`
}

func (x *CodingElementInfo) Reset() {
	*x = CodingElementInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coding_template_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodingElementInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodingElementInfo) ProtoMessage() {}

func (x *CodingElementInfo) ProtoReflect() protoreflect.Message {
	mi := &file_coding_template_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodingElementInfo.ProtoReflect.Descriptor instead.
func (*CodingElementInfo) Descriptor() ([]byte, []int) {
	return file_coding_template_proto_rawDescGZIP(), []int{1}
}

func (x *CodingElementInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CodingElementInfo) GetCodingTemplateID() string {
	if x != nil {
		return x.CodingTemplateID
	}
	return ""
}

func (x *CodingElementInfo) GetSortIndex() int32 {
	if x != nil {
		return x.SortIndex
	}
	return 0
}

func (x *CodingElementInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CodingElementInfo) GetElementType() int32 {
	if x != nil {
		return x.ElementType
	}
	return 0
}

func (x *CodingElementInfo) GetDataBits() int32 {
	if x != nil {
		return x.DataBits
	}
	return 0
}

func (x *CodingElementInfo) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *CodingElementInfo) GetPlaceHolder() string {
	if x != nil {
		return x.PlaceHolder
	}
	return ""
}

func (x *CodingElementInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CodingElementInfo) GetCodingElementValues() []*CodingElementValueInfo {
	if x != nil {
		return x.CodingElementValues
	}
	return nil
}

type CodingElementValueInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 编码元素ID
	CodingElementID string `protobuf:"bytes,2,opt,name=CodingElementID,proto3" json:"CodingElementID"`
	// 值
	Value string `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value"`
	// 描述
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description"`
}

func (x *CodingElementValueInfo) Reset() {
	*x = CodingElementValueInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coding_template_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodingElementValueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodingElementValueInfo) ProtoMessage() {}

func (x *CodingElementValueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_coding_template_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodingElementValueInfo.ProtoReflect.Descriptor instead.
func (*CodingElementValueInfo) Descriptor() ([]byte, []int) {
	return file_coding_template_proto_rawDescGZIP(), []int{2}
}

func (x *CodingElementValueInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CodingElementValueInfo) GetCodingElementID() string {
	if x != nil {
		return x.CodingElementID
	}
	return ""
}

func (x *CodingElementValueInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CodingElementValueInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type QueryCodingTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
	// 代号或描述
	// @inject_tag: uri:"code" form:"code"
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code" uri:"code" form:"code"`
}

func (x *QueryCodingTemplateRequest) Reset() {
	*x = QueryCodingTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coding_template_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCodingTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCodingTemplateRequest) ProtoMessage() {}

func (x *QueryCodingTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coding_template_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCodingTemplateRequest.ProtoReflect.Descriptor instead.
func (*QueryCodingTemplateRequest) Descriptor() ([]byte, []int) {
	return file_coding_template_proto_rawDescGZIP(), []int{3}
}

func (x *QueryCodingTemplateRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryCodingTemplateRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryCodingTemplateRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

func (x *QueryCodingTemplateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type QueryCodingTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                  `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*CodingTemplateInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64                 `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64                 `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64                 `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryCodingTemplateResponse) Reset() {
	*x = QueryCodingTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coding_template_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCodingTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCodingTemplateResponse) ProtoMessage() {}

func (x *QueryCodingTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coding_template_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCodingTemplateResponse.ProtoReflect.Descriptor instead.
func (*QueryCodingTemplateResponse) Descriptor() ([]byte, []int) {
	return file_coding_template_proto_rawDescGZIP(), []int{4}
}

func (x *QueryCodingTemplateResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryCodingTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryCodingTemplateResponse) GetData() []*CodingTemplateInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryCodingTemplateResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryCodingTemplateResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryCodingTemplateResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllCodingTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                  `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*CodingTemplateInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllCodingTemplateResponse) Reset() {
	*x = GetAllCodingTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coding_template_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCodingTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCodingTemplateResponse) ProtoMessage() {}

func (x *GetAllCodingTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coding_template_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCodingTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetAllCodingTemplateResponse) Descriptor() ([]byte, []int) {
	return file_coding_template_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllCodingTemplateResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllCodingTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllCodingTemplateResponse) GetData() []*CodingTemplateInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCodingTemplateDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *CodingTemplateInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetCodingTemplateDetailResponse) Reset() {
	*x = GetCodingTemplateDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coding_template_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCodingTemplateDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCodingTemplateDetailResponse) ProtoMessage() {}

func (x *GetCodingTemplateDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coding_template_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCodingTemplateDetailResponse.ProtoReflect.Descriptor instead.
func (*GetCodingTemplateDetailResponse) Descriptor() ([]byte, []int) {
	return file_coding_template_proto_rawDescGZIP(), []int{6}
}

func (x *GetCodingTemplateDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetCodingTemplateDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCodingTemplateDetailResponse) GetData() *CodingTemplateInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_coding_template_proto protoreflect.FileDescriptor

var file_coding_template_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x6d, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf0, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x42, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x42, 0x69, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0xee, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x69, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x4f, 0x0a, 0x13, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x13, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xcd,
	0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x88,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x01, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coding_template_proto_rawDescOnce sync.Once
	file_coding_template_proto_rawDescData = file_coding_template_proto_rawDesc
)

func file_coding_template_proto_rawDescGZIP() []byte {
	file_coding_template_proto_rawDescOnce.Do(func() {
		file_coding_template_proto_rawDescData = protoimpl.X.CompressGZIP(file_coding_template_proto_rawDescData)
	})
	return file_coding_template_proto_rawDescData
}

var file_coding_template_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_coding_template_proto_goTypes = []interface{}{
	(*CodingTemplateInfo)(nil),              // 0: proto.CodingTemplateInfo
	(*CodingElementInfo)(nil),               // 1: proto.CodingElementInfo
	(*CodingElementValueInfo)(nil),          // 2: proto.CodingElementValueInfo
	(*QueryCodingTemplateRequest)(nil),      // 3: proto.QueryCodingTemplateRequest
	(*QueryCodingTemplateResponse)(nil),     // 4: proto.QueryCodingTemplateResponse
	(*GetAllCodingTemplateResponse)(nil),    // 5: proto.GetAllCodingTemplateResponse
	(*GetCodingTemplateDetailResponse)(nil), // 6: proto.GetCodingTemplateDetailResponse
	(Code)(0),                               // 7: proto.Code
}
var file_coding_template_proto_depIdxs = []int32{
	1, // 0: proto.CodingTemplateInfo.codingElements:type_name -> proto.CodingElementInfo
	2, // 1: proto.CodingElementInfo.codingElementValues:type_name -> proto.CodingElementValueInfo
	7, // 2: proto.QueryCodingTemplateResponse.code:type_name -> proto.Code
	0, // 3: proto.QueryCodingTemplateResponse.data:type_name -> proto.CodingTemplateInfo
	7, // 4: proto.GetAllCodingTemplateResponse.code:type_name -> proto.Code
	0, // 5: proto.GetAllCodingTemplateResponse.data:type_name -> proto.CodingTemplateInfo
	7, // 6: proto.GetCodingTemplateDetailResponse.code:type_name -> proto.Code
	0, // 7: proto.GetCodingTemplateDetailResponse.data:type_name -> proto.CodingTemplateInfo
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_coding_template_proto_init() }
func file_coding_template_proto_init() {
	if File_coding_template_proto != nil {
		return
	}
	file_mom_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_coding_template_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodingTemplateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coding_template_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodingElementInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coding_template_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodingElementValueInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coding_template_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCodingTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coding_template_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCodingTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coding_template_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCodingTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coding_template_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCodingTemplateDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coding_template_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_coding_template_proto_goTypes,
		DependencyIndexes: file_coding_template_proto_depIdxs,
		MessageInfos:      file_coding_template_proto_msgTypes,
	}.Build()
	File_coding_template_proto = out.File
	file_coding_template_proto_rawDesc = nil
	file_coding_template_proto_goTypes = nil
	file_coding_template_proto_depIdxs = nil
}
