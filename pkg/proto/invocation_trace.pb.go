// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: invocation_trace.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InvocationTraceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	// IP地址
	IPAddress string `protobuf:"bytes,3,opt,name=iPAddress,proto3" json:"iPAddress"`
	// 控制器
	ControllerName string `protobuf:"bytes,4,opt,name=controllerName,proto3" json:"controllerName"`
	// 路由
	ActionName string `protobuf:"bytes,5,opt,name=actionName,proto3" json:"actionName"`
	// 请求地址
	RequestUrl string `protobuf:"bytes,6,opt,name=requestUrl,proto3" json:"requestUrl"`
	// 请求时间
	RequestTime string `protobuf:"bytes,7,opt,name=requestTime,proto3" json:"requestTime"`
	// 耗时
	Duration int32 `protobuf:"varint,8,opt,name=duration,proto3" json:"duration"`
	// 请求文本
	RequestText string `protobuf:"bytes,9,opt,name=requestText,proto3" json:"requestText"`
	// 响应文本
	ResponseText string `protobuf:"bytes,10,opt,name=responseText,proto3" json:"responseText"`
	// 响应码
	ResponseCode int32 `protobuf:"varint,11,opt,name=responseCode,proto3" json:"responseCode"`
	// 注释
	Annotation string `protobuf:"bytes,12,opt,name=annotation,proto3" json:"annotation"`
}

func (x *InvocationTraceInfo) Reset() {
	*x = InvocationTraceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invocation_trace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvocationTraceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvocationTraceInfo) ProtoMessage() {}

func (x *InvocationTraceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_invocation_trace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvocationTraceInfo.ProtoReflect.Descriptor instead.
func (*InvocationTraceInfo) Descriptor() ([]byte, []int) {
	return file_invocation_trace_proto_rawDescGZIP(), []int{0}
}

func (x *InvocationTraceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvocationTraceInfo) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

func (x *InvocationTraceInfo) GetControllerName() string {
	if x != nil {
		return x.ControllerName
	}
	return ""
}

func (x *InvocationTraceInfo) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *InvocationTraceInfo) GetRequestUrl() string {
	if x != nil {
		return x.RequestUrl
	}
	return ""
}

func (x *InvocationTraceInfo) GetRequestTime() string {
	if x != nil {
		return x.RequestTime
	}
	return ""
}

func (x *InvocationTraceInfo) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *InvocationTraceInfo) GetRequestText() string {
	if x != nil {
		return x.RequestText
	}
	return ""
}

func (x *InvocationTraceInfo) GetResponseText() string {
	if x != nil {
		return x.ResponseText
	}
	return ""
}

func (x *InvocationTraceInfo) GetResponseCode() int32 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

func (x *InvocationTraceInfo) GetAnnotation() string {
	if x != nil {
		return x.Annotation
	}
	return ""
}

type QueryInvocationTraceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
	// 请求时间开始
	// @inject_tag: uri:"requestTime0" form:"requestTime0"
	RequestTime0 string `protobuf:"bytes,4,opt,name=requestTime0,proto3" json:"requestTime0" uri:"requestTime0" form:"requestTime0"`
	// 请求时间结束
	// @inject_tag: uri:"requestTime1" form:"requestTime1"
	RequestTime1 string `protobuf:"bytes,5,opt,name=requestTime1,proto3" json:"requestTime1" uri:"requestTime1" form:"requestTime1"`
	// 路由
	// @inject_tag: uri:"actionName" form:"actionName"
	ActionName string `protobuf:"bytes,6,opt,name=actionName,proto3" json:"actionName" uri:"actionName" form:"actionName"`
	// IP地址
	// @inject_tag: uri:"iPAddress" form:"iPAddress"
	IPAddress string `protobuf:"bytes,7,opt,name=iPAddress,proto3" json:"iPAddress" uri:"iPAddress" form:"iPAddress"`
	// 请求文本或响应文本
	// @inject_tag: uri:"requestText" form:"requestText"
	RequestText string `protobuf:"bytes,8,opt,name=requestText,proto3" json:"requestText" uri:"requestText" form:"requestText"`
}

func (x *QueryInvocationTraceRequest) Reset() {
	*x = QueryInvocationTraceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invocation_trace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInvocationTraceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInvocationTraceRequest) ProtoMessage() {}

func (x *QueryInvocationTraceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invocation_trace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInvocationTraceRequest.ProtoReflect.Descriptor instead.
func (*QueryInvocationTraceRequest) Descriptor() ([]byte, []int) {
	return file_invocation_trace_proto_rawDescGZIP(), []int{1}
}

func (x *QueryInvocationTraceRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryInvocationTraceRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryInvocationTraceRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

func (x *QueryInvocationTraceRequest) GetRequestTime0() string {
	if x != nil {
		return x.RequestTime0
	}
	return ""
}

func (x *QueryInvocationTraceRequest) GetRequestTime1() string {
	if x != nil {
		return x.RequestTime1
	}
	return ""
}

func (x *QueryInvocationTraceRequest) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *QueryInvocationTraceRequest) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

func (x *QueryInvocationTraceRequest) GetRequestText() string {
	if x != nil {
		return x.RequestText
	}
	return ""
}

type QueryInvocationTraceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                   `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*InvocationTraceInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64                  `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64                  `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64                  `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryInvocationTraceResponse) Reset() {
	*x = QueryInvocationTraceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invocation_trace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInvocationTraceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInvocationTraceResponse) ProtoMessage() {}

func (x *QueryInvocationTraceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invocation_trace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInvocationTraceResponse.ProtoReflect.Descriptor instead.
func (*QueryInvocationTraceResponse) Descriptor() ([]byte, []int) {
	return file_invocation_trace_proto_rawDescGZIP(), []int{2}
}

func (x *QueryInvocationTraceResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryInvocationTraceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryInvocationTraceResponse) GetData() []*InvocationTraceInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryInvocationTraceResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryInvocationTraceResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryInvocationTraceResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllInvocationTraceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                   `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*InvocationTraceInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllInvocationTraceResponse) Reset() {
	*x = GetAllInvocationTraceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invocation_trace_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllInvocationTraceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllInvocationTraceResponse) ProtoMessage() {}

func (x *GetAllInvocationTraceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invocation_trace_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllInvocationTraceResponse.ProtoReflect.Descriptor instead.
func (*GetAllInvocationTraceResponse) Descriptor() ([]byte, []int) {
	return file_invocation_trace_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllInvocationTraceResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllInvocationTraceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllInvocationTraceResponse) GetData() []*InvocationTraceInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetInvocationTraceDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                 `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *InvocationTraceInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetInvocationTraceDetailResponse) Reset() {
	*x = GetInvocationTraceDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invocation_trace_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvocationTraceDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvocationTraceDetailResponse) ProtoMessage() {}

func (x *GetInvocationTraceDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invocation_trace_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvocationTraceDetailResponse.ProtoReflect.Descriptor instead.
func (*GetInvocationTraceDetailResponse) Descriptor() ([]byte, []int) {
	return file_invocation_trace_proto_rawDescGZIP(), []int{4}
}

func (x *GetInvocationTraceDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetInvocationTraceDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetInvocationTraceDetailResponse) GetData() *InvocationTraceInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_invocation_trace_proto protoreflect.FileDescriptor

var file_invocation_trace_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x10, 0x6d, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf3, 0x02, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x50,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x02, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x30, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x30, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x50,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x1c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x8a, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_invocation_trace_proto_rawDescOnce sync.Once
	file_invocation_trace_proto_rawDescData = file_invocation_trace_proto_rawDesc
)

func file_invocation_trace_proto_rawDescGZIP() []byte {
	file_invocation_trace_proto_rawDescOnce.Do(func() {
		file_invocation_trace_proto_rawDescData = protoimpl.X.CompressGZIP(file_invocation_trace_proto_rawDescData)
	})
	return file_invocation_trace_proto_rawDescData
}

var file_invocation_trace_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_invocation_trace_proto_goTypes = []interface{}{
	(*InvocationTraceInfo)(nil),              // 0: proto.InvocationTraceInfo
	(*QueryInvocationTraceRequest)(nil),      // 1: proto.QueryInvocationTraceRequest
	(*QueryInvocationTraceResponse)(nil),     // 2: proto.QueryInvocationTraceResponse
	(*GetAllInvocationTraceResponse)(nil),    // 3: proto.GetAllInvocationTraceResponse
	(*GetInvocationTraceDetailResponse)(nil), // 4: proto.GetInvocationTraceDetailResponse
	(Code)(0),                                // 5: proto.Code
}
var file_invocation_trace_proto_depIdxs = []int32{
	5, // 0: proto.QueryInvocationTraceResponse.code:type_name -> proto.Code
	0, // 1: proto.QueryInvocationTraceResponse.data:type_name -> proto.InvocationTraceInfo
	5, // 2: proto.GetAllInvocationTraceResponse.code:type_name -> proto.Code
	0, // 3: proto.GetAllInvocationTraceResponse.data:type_name -> proto.InvocationTraceInfo
	5, // 4: proto.GetInvocationTraceDetailResponse.code:type_name -> proto.Code
	0, // 5: proto.GetInvocationTraceDetailResponse.data:type_name -> proto.InvocationTraceInfo
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_invocation_trace_proto_init() }
func file_invocation_trace_proto_init() {
	if File_invocation_trace_proto != nil {
		return
	}
	file_mom_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_invocation_trace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvocationTraceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invocation_trace_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInvocationTraceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invocation_trace_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInvocationTraceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invocation_trace_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllInvocationTraceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invocation_trace_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvocationTraceDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_invocation_trace_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_invocation_trace_proto_goTypes,
		DependencyIndexes: file_invocation_trace_proto_depIdxs,
		MessageInfos:      file_invocation_trace_proto_msgTypes,
	}.Build()
	File_invocation_trace_proto = out.File
	file_invocation_trace_proto_rawDesc = nil
	file_invocation_trace_proto_goTypes = nil
	file_invocation_trace_proto_depIdxs = nil
}
