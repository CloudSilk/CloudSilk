// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: label_adaptation_rule.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LabelAdaptationRuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 优先级
	Priority int32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority"`
	// 适配标签模板ID
	LabelTemplateID string             `protobuf:"bytes,3,opt,name=labelTemplateID,proto3" json:"labelTemplateID"`
	LabelTemplate   *LabelTemplateInfo `protobuf:"bytes,4,opt,name=labelTemplate,proto3" json:"labelTemplate"`
	// 是否启用
	Enable bool `protobuf:"varint,5,opt,name=enable,proto3" json:"enable"`
	// 默认适配
	InitialValue bool `protobuf:"varint,6,opt,name=initialValue,proto3" json:"initialValue"`
	// 需要复核
	DoubleCheck bool `protobuf:"varint,7,opt,name=doubleCheck,proto3" json:"doubleCheck"`
	// 备注
	Remark               string                     `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark"`
	AttributeExpressions []*AttributeExpressionInfo `protobuf:"bytes,9,rep,name=attributeExpressions,proto3" json:"attributeExpressions"`
}

func (x *LabelAdaptationRuleInfo) Reset() {
	*x = LabelAdaptationRuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_adaptation_rule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelAdaptationRuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelAdaptationRuleInfo) ProtoMessage() {}

func (x *LabelAdaptationRuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_label_adaptation_rule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelAdaptationRuleInfo.ProtoReflect.Descriptor instead.
func (*LabelAdaptationRuleInfo) Descriptor() ([]byte, []int) {
	return file_label_adaptation_rule_proto_rawDescGZIP(), []int{0}
}

func (x *LabelAdaptationRuleInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LabelAdaptationRuleInfo) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *LabelAdaptationRuleInfo) GetLabelTemplateID() string {
	if x != nil {
		return x.LabelTemplateID
	}
	return ""
}

func (x *LabelAdaptationRuleInfo) GetLabelTemplate() *LabelTemplateInfo {
	if x != nil {
		return x.LabelTemplate
	}
	return nil
}

func (x *LabelAdaptationRuleInfo) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *LabelAdaptationRuleInfo) GetInitialValue() bool {
	if x != nil {
		return x.InitialValue
	}
	return false
}

func (x *LabelAdaptationRuleInfo) GetDoubleCheck() bool {
	if x != nil {
		return x.DoubleCheck
	}
	return false
}

func (x *LabelAdaptationRuleInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *LabelAdaptationRuleInfo) GetAttributeExpressions() []*AttributeExpressionInfo {
	if x != nil {
		return x.AttributeExpressions
	}
	return nil
}

type QueryLabelAdaptationRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
}

func (x *QueryLabelAdaptationRuleRequest) Reset() {
	*x = QueryLabelAdaptationRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_adaptation_rule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLabelAdaptationRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLabelAdaptationRuleRequest) ProtoMessage() {}

func (x *QueryLabelAdaptationRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_adaptation_rule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLabelAdaptationRuleRequest.ProtoReflect.Descriptor instead.
func (*QueryLabelAdaptationRuleRequest) Descriptor() ([]byte, []int) {
	return file_label_adaptation_rule_proto_rawDescGZIP(), []int{1}
}

func (x *QueryLabelAdaptationRuleRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryLabelAdaptationRuleRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryLabelAdaptationRuleRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

type QueryLabelAdaptationRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                       `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*LabelAdaptationRuleInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64                      `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64                      `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64                      `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryLabelAdaptationRuleResponse) Reset() {
	*x = QueryLabelAdaptationRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_adaptation_rule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLabelAdaptationRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLabelAdaptationRuleResponse) ProtoMessage() {}

func (x *QueryLabelAdaptationRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_adaptation_rule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLabelAdaptationRuleResponse.ProtoReflect.Descriptor instead.
func (*QueryLabelAdaptationRuleResponse) Descriptor() ([]byte, []int) {
	return file_label_adaptation_rule_proto_rawDescGZIP(), []int{2}
}

func (x *QueryLabelAdaptationRuleResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryLabelAdaptationRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryLabelAdaptationRuleResponse) GetData() []*LabelAdaptationRuleInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryLabelAdaptationRuleResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryLabelAdaptationRuleResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryLabelAdaptationRuleResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllLabelAdaptationRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                       `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*LabelAdaptationRuleInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllLabelAdaptationRuleResponse) Reset() {
	*x = GetAllLabelAdaptationRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_adaptation_rule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllLabelAdaptationRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllLabelAdaptationRuleResponse) ProtoMessage() {}

func (x *GetAllLabelAdaptationRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_adaptation_rule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllLabelAdaptationRuleResponse.ProtoReflect.Descriptor instead.
func (*GetAllLabelAdaptationRuleResponse) Descriptor() ([]byte, []int) {
	return file_label_adaptation_rule_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllLabelAdaptationRuleResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllLabelAdaptationRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllLabelAdaptationRuleResponse) GetData() []*LabelAdaptationRuleInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLabelAdaptationRuleDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                     `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *LabelAdaptationRuleInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetLabelAdaptationRuleDetailResponse) Reset() {
	*x = GetLabelAdaptationRuleDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_adaptation_rule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelAdaptationRuleDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelAdaptationRuleDetailResponse) ProtoMessage() {}

func (x *GetLabelAdaptationRuleDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_adaptation_rule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelAdaptationRuleDetailResponse.ProtoReflect.Descriptor instead.
func (*GetLabelAdaptationRuleDetailResponse) Descriptor() ([]byte, []int) {
	return file_label_adaptation_rule_proto_rawDescGZIP(), []int{4}
}

func (x *GetLabelAdaptationRuleDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetLabelAdaptationRuleDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetLabelAdaptationRuleDetailResponse) GetData() *LabelAdaptationRuleInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_label_adaptation_rule_proto protoreflect.FileDescriptor

var file_label_adaptation_rule_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6d, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x02, 0x0a, 0x17, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x0d, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x52, 0x0a, 0x14, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7b, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0xd7, 0x01, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x41, 0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x92, 0x01, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x95, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x41, 0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_label_adaptation_rule_proto_rawDescOnce sync.Once
	file_label_adaptation_rule_proto_rawDescData = file_label_adaptation_rule_proto_rawDesc
)

func file_label_adaptation_rule_proto_rawDescGZIP() []byte {
	file_label_adaptation_rule_proto_rawDescOnce.Do(func() {
		file_label_adaptation_rule_proto_rawDescData = protoimpl.X.CompressGZIP(file_label_adaptation_rule_proto_rawDescData)
	})
	return file_label_adaptation_rule_proto_rawDescData
}

var file_label_adaptation_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_label_adaptation_rule_proto_goTypes = []interface{}{
	(*LabelAdaptationRuleInfo)(nil),              // 0: proto.LabelAdaptationRuleInfo
	(*QueryLabelAdaptationRuleRequest)(nil),      // 1: proto.QueryLabelAdaptationRuleRequest
	(*QueryLabelAdaptationRuleResponse)(nil),     // 2: proto.QueryLabelAdaptationRuleResponse
	(*GetAllLabelAdaptationRuleResponse)(nil),    // 3: proto.GetAllLabelAdaptationRuleResponse
	(*GetLabelAdaptationRuleDetailResponse)(nil), // 4: proto.GetLabelAdaptationRuleDetailResponse
	(*LabelTemplateInfo)(nil),                    // 5: proto.LabelTemplateInfo
	(*AttributeExpressionInfo)(nil),              // 6: proto.AttributeExpressionInfo
	(Code)(0),                                    // 7: proto.Code
}
var file_label_adaptation_rule_proto_depIdxs = []int32{
	5, // 0: proto.LabelAdaptationRuleInfo.labelTemplate:type_name -> proto.LabelTemplateInfo
	6, // 1: proto.LabelAdaptationRuleInfo.attributeExpressions:type_name -> proto.AttributeExpressionInfo
	7, // 2: proto.QueryLabelAdaptationRuleResponse.code:type_name -> proto.Code
	0, // 3: proto.QueryLabelAdaptationRuleResponse.data:type_name -> proto.LabelAdaptationRuleInfo
	7, // 4: proto.GetAllLabelAdaptationRuleResponse.code:type_name -> proto.Code
	0, // 5: proto.GetAllLabelAdaptationRuleResponse.data:type_name -> proto.LabelAdaptationRuleInfo
	7, // 6: proto.GetLabelAdaptationRuleDetailResponse.code:type_name -> proto.Code
	0, // 7: proto.GetLabelAdaptationRuleDetailResponse.data:type_name -> proto.LabelAdaptationRuleInfo
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_label_adaptation_rule_proto_init() }
func file_label_adaptation_rule_proto_init() {
	if File_label_adaptation_rule_proto != nil {
		return
	}
	file_mom_common_proto_init()
	file_label_template_proto_init()
	file_attribute_expression_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_label_adaptation_rule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelAdaptationRuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_adaptation_rule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLabelAdaptationRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_adaptation_rule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLabelAdaptationRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_adaptation_rule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllLabelAdaptationRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_adaptation_rule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelAdaptationRuleDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_label_adaptation_rule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_label_adaptation_rule_proto_goTypes,
		DependencyIndexes: file_label_adaptation_rule_proto_depIdxs,
		MessageInfos:      file_label_adaptation_rule_proto_msgTypes,
	}.Build()
	File_label_adaptation_rule_proto = out.File
	file_label_adaptation_rule_proto_rawDesc = nil
	file_label_adaptation_rule_proto_goTypes = nil
	file_label_adaptation_rule_proto_depIdxs = nil
}
