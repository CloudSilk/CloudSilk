// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: production_efficiency.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductionEfficiencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 产出日期
	OutputDate string `protobuf:"bytes,3,opt,name=outputDate,proto3" json:"outputDate"`
	// 当日产量
	OutputOfThisDay int32 `protobuf:"varint,4,opt,name=outputOfThisDay,proto3" json:"outputOfThisDay"`
	// 作业次数
	NumberOfWork int32 `protobuf:"varint,5,opt,name=numberOfWork,proto3" json:"numberOfWork"`
	// 合格次数
	NumberOfPass int32 `protobuf:"varint,6,opt,name=numberOfPass,proto3" json:"numberOfPass"`
	// 失败次数
	NumberOfFail int32 `protobuf:"varint,7,opt,name=numberOfFail,proto3" json:"numberOfFail"`
	// 一次通过率
	Fpy float32 `protobuf:"fixed32,8,opt,name=fpy,proto3" json:"fpy"`
	// 理论节拍
	EstimateRhythm float32 `protobuf:"fixed32,9,opt,name=estimateRhythm,proto3" json:"estimateRhythm"`
	// 平均节拍
	AverageRhythm float32 `protobuf:"fixed32,10,opt,name=averageRhythm,proto3" json:"averageRhythm"`
	// 开机时长
	StartupDuration float32 `protobuf:"fixed32,11,opt,name=startupDuration,proto3" json:"startupDuration"`
	// 计划内停机时长
	PlannedShutdownDuration float32 `protobuf:"fixed32,12,opt,name=plannedShutdownDuration,proto3" json:"plannedShutdownDuration"`
	// 预计稼动时长
	EstimateAvailableDuration float32 `protobuf:"fixed32,13,opt,name=estimateAvailableDuration,proto3" json:"estimateAvailableDuration"`
	// 故障次数
	NumberOfBreakdown int32 `protobuf:"varint,14,opt,name=numberOfBreakdown,proto3" json:"numberOfBreakdown"`
	// 故障时长
	BreakdownDuration float32 `protobuf:"fixed32,15,opt,name=breakdownDuration,proto3" json:"breakdownDuration"`
	// 计划外停机次数
	NumberOfShutdown int32 `protobuf:"varint,16,opt,name=numberOfShutdown,proto3" json:"numberOfShutdown"`
	// 计划外停机时长
	UnplannedShutdownDuration float32 `protobuf:"fixed32,17,opt,name=unplannedShutdownDuration,proto3" json:"unplannedShutdownDuration"`
	// 设备故障率
	Oef float32 `protobuf:"fixed32,18,opt,name=oef,proto3" json:"oef"`
	// 实际稼动时长
	ActualAvailableDuration float32 `protobuf:"fixed32,19,opt,name=actualAvailableDuration,proto3" json:"actualAvailableDuration"`
	// 实际作业时长
	ActualEffectiveDuration float32 `protobuf:"fixed32,20,opt,name=actualEffectiveDuration,proto3" json:"actualEffectiveDuration"`
	// 时间稼动率
	Oeu float32 `protobuf:"fixed32,21,opt,name=oeu,proto3" json:"oeu"`
	// 性能稼动率
	Oep float32 `protobuf:"fixed32,22,opt,name=oep,proto3" json:"oep"`
	// 设备综合效率
	Oee float32 `protobuf:"fixed32,23,opt,name=oee,proto3" json:"oee"`
	// 最后更新时间
	LastUpdateTime string `protobuf:"bytes,24,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime"`
	// 生产工站ID
	ProductionStationID string                 `protobuf:"bytes,25,opt,name=productionStationID,proto3" json:"productionStationID"`
	ProductionStation   *ProductionStationInfo `protobuf:"bytes,26,opt,name=productionStation,proto3" json:"productionStation"`
}

func (x *ProductionEfficiencyInfo) Reset() {
	*x = ProductionEfficiencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_production_efficiency_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductionEfficiencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductionEfficiencyInfo) ProtoMessage() {}

func (x *ProductionEfficiencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_production_efficiency_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductionEfficiencyInfo.ProtoReflect.Descriptor instead.
func (*ProductionEfficiencyInfo) Descriptor() ([]byte, []int) {
	return file_production_efficiency_proto_rawDescGZIP(), []int{0}
}

func (x *ProductionEfficiencyInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductionEfficiencyInfo) GetOutputDate() string {
	if x != nil {
		return x.OutputDate
	}
	return ""
}

func (x *ProductionEfficiencyInfo) GetOutputOfThisDay() int32 {
	if x != nil {
		return x.OutputOfThisDay
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetNumberOfWork() int32 {
	if x != nil {
		return x.NumberOfWork
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetNumberOfPass() int32 {
	if x != nil {
		return x.NumberOfPass
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetNumberOfFail() int32 {
	if x != nil {
		return x.NumberOfFail
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetFpy() float32 {
	if x != nil {
		return x.Fpy
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetEstimateRhythm() float32 {
	if x != nil {
		return x.EstimateRhythm
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetAverageRhythm() float32 {
	if x != nil {
		return x.AverageRhythm
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetStartupDuration() float32 {
	if x != nil {
		return x.StartupDuration
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetPlannedShutdownDuration() float32 {
	if x != nil {
		return x.PlannedShutdownDuration
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetEstimateAvailableDuration() float32 {
	if x != nil {
		return x.EstimateAvailableDuration
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetNumberOfBreakdown() int32 {
	if x != nil {
		return x.NumberOfBreakdown
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetBreakdownDuration() float32 {
	if x != nil {
		return x.BreakdownDuration
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetNumberOfShutdown() int32 {
	if x != nil {
		return x.NumberOfShutdown
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetUnplannedShutdownDuration() float32 {
	if x != nil {
		return x.UnplannedShutdownDuration
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetOef() float32 {
	if x != nil {
		return x.Oef
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetActualAvailableDuration() float32 {
	if x != nil {
		return x.ActualAvailableDuration
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetActualEffectiveDuration() float32 {
	if x != nil {
		return x.ActualEffectiveDuration
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetOeu() float32 {
	if x != nil {
		return x.Oeu
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetOep() float32 {
	if x != nil {
		return x.Oep
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetOee() float32 {
	if x != nil {
		return x.Oee
	}
	return 0
}

func (x *ProductionEfficiencyInfo) GetLastUpdateTime() string {
	if x != nil {
		return x.LastUpdateTime
	}
	return ""
}

func (x *ProductionEfficiencyInfo) GetProductionStationID() string {
	if x != nil {
		return x.ProductionStationID
	}
	return ""
}

func (x *ProductionEfficiencyInfo) GetProductionStation() *ProductionStationInfo {
	if x != nil {
		return x.ProductionStation
	}
	return nil
}

type QueryProductionEfficiencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
	// 创建时间开始
	// @inject_tag: uri:"outputDate0" form:"outputDate0"
	OutputDate0 string `protobuf:"bytes,5,opt,name=outputDate0,proto3" json:"outputDate0" uri:"outputDate0" form:"outputDate0"`
	// 创建时间结束
	// @inject_tag: uri:"outputDate1" form:"outputDate1"
	OutputDate1 string `protobuf:"bytes,6,opt,name=outputDate1,proto3" json:"outputDate1" uri:"outputDate1" form:"outputDate1"`
	// 生产产线ID
	// @inject_tag: uri:"productionLineID" form:"productionLineID"
	ProductionLineID string `protobuf:"bytes,14,opt,name=productionLineID,proto3" json:"productionLineID" uri:"productionLineID" form:"productionLineID"`
}

func (x *QueryProductionEfficiencyRequest) Reset() {
	*x = QueryProductionEfficiencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_production_efficiency_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductionEfficiencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductionEfficiencyRequest) ProtoMessage() {}

func (x *QueryProductionEfficiencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_production_efficiency_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductionEfficiencyRequest.ProtoReflect.Descriptor instead.
func (*QueryProductionEfficiencyRequest) Descriptor() ([]byte, []int) {
	return file_production_efficiency_proto_rawDescGZIP(), []int{1}
}

func (x *QueryProductionEfficiencyRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryProductionEfficiencyRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryProductionEfficiencyRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

func (x *QueryProductionEfficiencyRequest) GetOutputDate0() string {
	if x != nil {
		return x.OutputDate0
	}
	return ""
}

func (x *QueryProductionEfficiencyRequest) GetOutputDate1() string {
	if x != nil {
		return x.OutputDate1
	}
	return ""
}

func (x *QueryProductionEfficiencyRequest) GetProductionLineID() string {
	if x != nil {
		return x.ProductionLineID
	}
	return ""
}

type QueryProductionEfficiencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                        `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductionEfficiencyInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64                       `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64                       `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64                       `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryProductionEfficiencyResponse) Reset() {
	*x = QueryProductionEfficiencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_production_efficiency_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductionEfficiencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductionEfficiencyResponse) ProtoMessage() {}

func (x *QueryProductionEfficiencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_production_efficiency_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductionEfficiencyResponse.ProtoReflect.Descriptor instead.
func (*QueryProductionEfficiencyResponse) Descriptor() ([]byte, []int) {
	return file_production_efficiency_proto_rawDescGZIP(), []int{2}
}

func (x *QueryProductionEfficiencyResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryProductionEfficiencyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryProductionEfficiencyResponse) GetData() []*ProductionEfficiencyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryProductionEfficiencyResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryProductionEfficiencyResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryProductionEfficiencyResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllProductionEfficiencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                        `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductionEfficiencyInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllProductionEfficiencyResponse) Reset() {
	*x = GetAllProductionEfficiencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_production_efficiency_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProductionEfficiencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductionEfficiencyResponse) ProtoMessage() {}

func (x *GetAllProductionEfficiencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_production_efficiency_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductionEfficiencyResponse.ProtoReflect.Descriptor instead.
func (*GetAllProductionEfficiencyResponse) Descriptor() ([]byte, []int) {
	return file_production_efficiency_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllProductionEfficiencyResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllProductionEfficiencyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllProductionEfficiencyResponse) GetData() []*ProductionEfficiencyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductionEfficiencyDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                      `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *ProductionEfficiencyInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetProductionEfficiencyDetailResponse) Reset() {
	*x = GetProductionEfficiencyDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_production_efficiency_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductionEfficiencyDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductionEfficiencyDetailResponse) ProtoMessage() {}

func (x *GetProductionEfficiencyDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_production_efficiency_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductionEfficiencyDetailResponse.ProtoReflect.Descriptor instead.
func (*GetProductionEfficiencyDetailResponse) Descriptor() ([]byte, []int) {
	return file_production_efficiency_proto_rawDescGZIP(), []int{4}
}

func (x *GetProductionEfficiencyDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetProductionEfficiencyDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductionEfficiencyDetailResponse) GetData() *ProductionEfficiencyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_production_efficiency_proto protoreflect.FileDescriptor

var file_production_efficiency_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6d, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x08,
	0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x69, 0x73, 0x44, 0x61, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4f, 0x66, 0x54, 0x68, 0x69,
	0x73, 0x44, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x57, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x50, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x61, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x61, 0x69, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x70, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x66,
	0x70, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x68,
	0x79, 0x74, 0x68, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x52, 0x68, 0x79, 0x74, 0x68, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x68, 0x79, 0x74, 0x68, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x68, 0x79, 0x74, 0x68, 0x6d,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x75, 0x70, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x70, 0x6c,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x70, 0x6c, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x19, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x62, 0x72, 0x65,
	0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f,
	0x77, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x3c, 0x0a, 0x19, 0x75, 0x6e,
	0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x75,
	0x6e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x65, 0x66, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6f, 0x65, 0x66, 0x12, 0x38, 0x0a, 0x17, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x65, 0x75, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6f, 0x65, 0x75,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x65, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6f,
	0x65, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x65, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x6f, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x4a,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xec, 0x01, 0x0a, 0x20, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x30, 0x12, 0x20, 0x0a, 0x0b, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x31, 0x12, 0x2a, 0x0a,
	0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x22, 0xd9, 0x01, 0x0a, 0x21, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x94, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e,
	0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x01, 0x0a,
	0x25, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_production_efficiency_proto_rawDescOnce sync.Once
	file_production_efficiency_proto_rawDescData = file_production_efficiency_proto_rawDesc
)

func file_production_efficiency_proto_rawDescGZIP() []byte {
	file_production_efficiency_proto_rawDescOnce.Do(func() {
		file_production_efficiency_proto_rawDescData = protoimpl.X.CompressGZIP(file_production_efficiency_proto_rawDescData)
	})
	return file_production_efficiency_proto_rawDescData
}

var file_production_efficiency_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_production_efficiency_proto_goTypes = []interface{}{
	(*ProductionEfficiencyInfo)(nil),              // 0: proto.ProductionEfficiencyInfo
	(*QueryProductionEfficiencyRequest)(nil),      // 1: proto.QueryProductionEfficiencyRequest
	(*QueryProductionEfficiencyResponse)(nil),     // 2: proto.QueryProductionEfficiencyResponse
	(*GetAllProductionEfficiencyResponse)(nil),    // 3: proto.GetAllProductionEfficiencyResponse
	(*GetProductionEfficiencyDetailResponse)(nil), // 4: proto.GetProductionEfficiencyDetailResponse
	(*ProductionStationInfo)(nil),                 // 5: proto.ProductionStationInfo
	(Code)(0),                                     // 6: proto.Code
}
var file_production_efficiency_proto_depIdxs = []int32{
	5, // 0: proto.ProductionEfficiencyInfo.productionStation:type_name -> proto.ProductionStationInfo
	6, // 1: proto.QueryProductionEfficiencyResponse.code:type_name -> proto.Code
	0, // 2: proto.QueryProductionEfficiencyResponse.data:type_name -> proto.ProductionEfficiencyInfo
	6, // 3: proto.GetAllProductionEfficiencyResponse.code:type_name -> proto.Code
	0, // 4: proto.GetAllProductionEfficiencyResponse.data:type_name -> proto.ProductionEfficiencyInfo
	6, // 5: proto.GetProductionEfficiencyDetailResponse.code:type_name -> proto.Code
	0, // 6: proto.GetProductionEfficiencyDetailResponse.data:type_name -> proto.ProductionEfficiencyInfo
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_production_efficiency_proto_init() }
func file_production_efficiency_proto_init() {
	if File_production_efficiency_proto != nil {
		return
	}
	file_mom_common_proto_init()
	file_production_line_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_production_efficiency_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductionEfficiencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_production_efficiency_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductionEfficiencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_production_efficiency_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductionEfficiencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_production_efficiency_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProductionEfficiencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_production_efficiency_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductionEfficiencyDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_production_efficiency_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_production_efficiency_proto_goTypes,
		DependencyIndexes: file_production_efficiency_proto_depIdxs,
		MessageInfos:      file_production_efficiency_proto_msgTypes,
	}.Build()
	File_production_efficiency_proto = out.File
	file_production_efficiency_proto_rawDesc = nil
	file_production_efficiency_proto_goTypes = nil
	file_production_efficiency_proto_depIdxs = nil
}
