// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: product_category_attribute.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductCategoryAttributeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	// 允许空缺
	AllowNullOrBlank bool `protobuf:"varint,3,opt,name=allowNullOrBlank,proto3" json:"allowNullOrBlank"`
	// 预设值
	DefaultValue string `protobuf:"bytes,4,opt,name=defaultValue,proto3" json:"defaultValue"`
	// 产品类别ID
	ProductCategoryID string `protobuf:"bytes,5,opt,name=productCategoryID,proto3" json:"productCategoryID"`
	// 产品特性ID
	ProductAttributeID          string `protobuf:"bytes,6,opt,name=productAttributeID,proto3" json:"productAttributeID"`
	ProductAttributeCode        string `protobuf:"bytes,8,opt,name=productAttributeCode,proto3" json:"productAttributeCode"`
	ProductAttributeDescription string `protobuf:"bytes,9,opt,name=productAttributeDescription,proto3" json:"productAttributeDescription"`
	// 产品类别特征值
	ProductCategoryAttributeValue []*ProductCategoryAttributeValueInfo `protobuf:"bytes,7,rep,name=productCategoryAttributeValue,proto3" json:"productCategoryAttributeValue"`
}

func (x *ProductCategoryAttributeInfo) Reset() {
	*x = ProductCategoryAttributeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_category_attribute_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryAttributeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryAttributeInfo) ProtoMessage() {}

func (x *ProductCategoryAttributeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_category_attribute_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryAttributeInfo.ProtoReflect.Descriptor instead.
func (*ProductCategoryAttributeInfo) Descriptor() ([]byte, []int) {
	return file_product_category_attribute_proto_rawDescGZIP(), []int{0}
}

func (x *ProductCategoryAttributeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductCategoryAttributeInfo) GetAllowNullOrBlank() bool {
	if x != nil {
		return x.AllowNullOrBlank
	}
	return false
}

func (x *ProductCategoryAttributeInfo) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *ProductCategoryAttributeInfo) GetProductCategoryID() string {
	if x != nil {
		return x.ProductCategoryID
	}
	return ""
}

func (x *ProductCategoryAttributeInfo) GetProductAttributeID() string {
	if x != nil {
		return x.ProductAttributeID
	}
	return ""
}

func (x *ProductCategoryAttributeInfo) GetProductAttributeCode() string {
	if x != nil {
		return x.ProductAttributeCode
	}
	return ""
}

func (x *ProductCategoryAttributeInfo) GetProductAttributeDescription() string {
	if x != nil {
		return x.ProductAttributeDescription
	}
	return ""
}

func (x *ProductCategoryAttributeInfo) GetProductCategoryAttributeValue() []*ProductCategoryAttributeValueInfo {
	if x != nil {
		return x.ProductCategoryAttributeValue
	}
	return nil
}

type ProductCategoryAttributeValueInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	// 值
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value"`
	// 描述
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description"`
	// 产品类别特性ID
	ProductCategoryAttributeID string `protobuf:"bytes,5,opt,name=productCategoryAttributeID,proto3" json:"productCategoryAttributeID"`
}

func (x *ProductCategoryAttributeValueInfo) Reset() {
	*x = ProductCategoryAttributeValueInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_category_attribute_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryAttributeValueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryAttributeValueInfo) ProtoMessage() {}

func (x *ProductCategoryAttributeValueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_category_attribute_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryAttributeValueInfo.ProtoReflect.Descriptor instead.
func (*ProductCategoryAttributeValueInfo) Descriptor() ([]byte, []int) {
	return file_product_category_attribute_proto_rawDescGZIP(), []int{1}
}

func (x *ProductCategoryAttributeValueInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductCategoryAttributeValueInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ProductCategoryAttributeValueInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductCategoryAttributeValueInfo) GetProductCategoryAttributeID() string {
	if x != nil {
		return x.ProductCategoryAttributeID
	}
	return ""
}

type QueryProductCategoryAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
	// 产品类别ID
	// @inject_tag: uri:"productCategoryID" form:"productCategoryID"
	ProductCategoryID string `protobuf:"bytes,4,opt,name=productCategoryID,proto3" json:"productCategoryID" uri:"productCategoryID" form:"productCategoryID"`
	// 特性或描述
	// @inject_tag: uri:"productAtribute" form:"productAtribute"
	ProductAtribute string `protobuf:"bytes,5,opt,name=productAtribute,proto3" json:"productAtribute" uri:"productAtribute" form:"productAtribute"`
	// 产品特性ID
	// @inject_tag: uri:"productAttributeID" form:"productAttributeID"
	ProductAttributeID string `protobuf:"bytes,6,opt,name=productAttributeID,proto3" json:"productAttributeID" uri:"productAttributeID" form:"productAttributeID"`
}

func (x *QueryProductCategoryAttributeRequest) Reset() {
	*x = QueryProductCategoryAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_category_attribute_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductCategoryAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductCategoryAttributeRequest) ProtoMessage() {}

func (x *QueryProductCategoryAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_category_attribute_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductCategoryAttributeRequest.ProtoReflect.Descriptor instead.
func (*QueryProductCategoryAttributeRequest) Descriptor() ([]byte, []int) {
	return file_product_category_attribute_proto_rawDescGZIP(), []int{2}
}

func (x *QueryProductCategoryAttributeRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryProductCategoryAttributeRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryProductCategoryAttributeRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

func (x *QueryProductCategoryAttributeRequest) GetProductCategoryID() string {
	if x != nil {
		return x.ProductCategoryID
	}
	return ""
}

func (x *QueryProductCategoryAttributeRequest) GetProductAtribute() string {
	if x != nil {
		return x.ProductAtribute
	}
	return ""
}

func (x *QueryProductCategoryAttributeRequest) GetProductAttributeID() string {
	if x != nil {
		return x.ProductAttributeID
	}
	return ""
}

type QueryProductCategoryAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                            `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                          `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductCategoryAttributeInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64                           `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64                           `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64                           `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryProductCategoryAttributeResponse) Reset() {
	*x = QueryProductCategoryAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_category_attribute_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductCategoryAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductCategoryAttributeResponse) ProtoMessage() {}

func (x *QueryProductCategoryAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_category_attribute_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductCategoryAttributeResponse.ProtoReflect.Descriptor instead.
func (*QueryProductCategoryAttributeResponse) Descriptor() ([]byte, []int) {
	return file_product_category_attribute_proto_rawDescGZIP(), []int{3}
}

func (x *QueryProductCategoryAttributeResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryProductCategoryAttributeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryProductCategoryAttributeResponse) GetData() []*ProductCategoryAttributeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryProductCategoryAttributeResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryProductCategoryAttributeResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryProductCategoryAttributeResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllProductCategoryAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                            `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                          `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductCategoryAttributeInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllProductCategoryAttributeResponse) Reset() {
	*x = GetAllProductCategoryAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_category_attribute_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProductCategoryAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductCategoryAttributeResponse) ProtoMessage() {}

func (x *GetAllProductCategoryAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_category_attribute_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductCategoryAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetAllProductCategoryAttributeResponse) Descriptor() ([]byte, []int) {
	return file_product_category_attribute_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllProductCategoryAttributeResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllProductCategoryAttributeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllProductCategoryAttributeResponse) GetData() []*ProductCategoryAttributeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductCategoryAttributeDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                          `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *ProductCategoryAttributeInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetProductCategoryAttributeDetailResponse) Reset() {
	*x = GetProductCategoryAttributeDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_category_attribute_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductCategoryAttributeDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductCategoryAttributeDetailResponse) ProtoMessage() {}

func (x *GetProductCategoryAttributeDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_category_attribute_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductCategoryAttributeDetailResponse.ProtoReflect.Descriptor instead.
func (*GetProductCategoryAttributeDetailResponse) Descriptor() ([]byte, []int) {
	return file_product_category_attribute_proto_rawDescGZIP(), []int{5}
}

func (x *GetProductCategoryAttributeDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetProductCategoryAttributeDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductCategoryAttributeDetailResponse) GetData() *ProductCategoryAttributeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_product_category_attribute_proto protoreflect.FileDescriptor

var file_product_category_attribute_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6d, 0x6f, 0x6d, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x03, 0x0a, 0x1c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x75, 0x6c, 0x6c, 0x4f, 0x72, 0x42, 0x6c, 0x61, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x75, 0x6c,
	0x6c, 0x4f, 0x72, 0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x40,
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x6e, 0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x1d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xab, 0x01, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e,
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x44, 0x22, 0x88,
	0x02, 0x0a, 0x24, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12,
	0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x44, 0x22, 0xe1, 0x01, 0x0a, 0x25, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9c, 0x01,
	0x0a, 0x26, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9f, 0x01, 0x0a,
	0x29, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_product_category_attribute_proto_rawDescOnce sync.Once
	file_product_category_attribute_proto_rawDescData = file_product_category_attribute_proto_rawDesc
)

func file_product_category_attribute_proto_rawDescGZIP() []byte {
	file_product_category_attribute_proto_rawDescOnce.Do(func() {
		file_product_category_attribute_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_category_attribute_proto_rawDescData)
	})
	return file_product_category_attribute_proto_rawDescData
}

var file_product_category_attribute_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_product_category_attribute_proto_goTypes = []interface{}{
	(*ProductCategoryAttributeInfo)(nil),              // 0: proto.ProductCategoryAttributeInfo
	(*ProductCategoryAttributeValueInfo)(nil),         // 1: proto.ProductCategoryAttributeValueInfo
	(*QueryProductCategoryAttributeRequest)(nil),      // 2: proto.QueryProductCategoryAttributeRequest
	(*QueryProductCategoryAttributeResponse)(nil),     // 3: proto.QueryProductCategoryAttributeResponse
	(*GetAllProductCategoryAttributeResponse)(nil),    // 4: proto.GetAllProductCategoryAttributeResponse
	(*GetProductCategoryAttributeDetailResponse)(nil), // 5: proto.GetProductCategoryAttributeDetailResponse
	(Code)(0), // 6: proto.Code
}
var file_product_category_attribute_proto_depIdxs = []int32{
	1, // 0: proto.ProductCategoryAttributeInfo.productCategoryAttributeValue:type_name -> proto.ProductCategoryAttributeValueInfo
	6, // 1: proto.QueryProductCategoryAttributeResponse.code:type_name -> proto.Code
	0, // 2: proto.QueryProductCategoryAttributeResponse.data:type_name -> proto.ProductCategoryAttributeInfo
	6, // 3: proto.GetAllProductCategoryAttributeResponse.code:type_name -> proto.Code
	0, // 4: proto.GetAllProductCategoryAttributeResponse.data:type_name -> proto.ProductCategoryAttributeInfo
	6, // 5: proto.GetProductCategoryAttributeDetailResponse.code:type_name -> proto.Code
	0, // 6: proto.GetProductCategoryAttributeDetailResponse.data:type_name -> proto.ProductCategoryAttributeInfo
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_product_category_attribute_proto_init() }
func file_product_category_attribute_proto_init() {
	if File_product_category_attribute_proto != nil {
		return
	}
	file_mom_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_product_category_attribute_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryAttributeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_category_attribute_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryAttributeValueInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_category_attribute_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductCategoryAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_category_attribute_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductCategoryAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_category_attribute_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProductCategoryAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_category_attribute_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductCategoryAttributeDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_category_attribute_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_product_category_attribute_proto_goTypes,
		DependencyIndexes: file_product_category_attribute_proto_depIdxs,
		MessageInfos:      file_product_category_attribute_proto_msgTypes,
	}.Build()
	File_product_category_attribute_proto = out.File
	file_product_category_attribute_proto_rawDesc = nil
	file_product_category_attribute_proto_goTypes = nil
	file_product_category_attribute_proto_depIdxs = nil
}
