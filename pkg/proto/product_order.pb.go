// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: product_order.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductOrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id"`
	// 生产工单号
	ProductOrderNo string `protobuf:"bytes,4,opt,name=productOrderNo,proto3" json:"productOrderNo"`
	// 销售单号
	SalesOrderNo string `protobuf:"bytes,5,opt,name=salesOrderNo,proto3" json:"salesOrderNo"`
	// 销售项号
	ItemNo string `protobuf:"bytes,6,opt,name=itemNo,proto3" json:"itemNo"`
	// 客户名称
	CustomerName string `protobuf:"bytes,7,opt,name=customerName,proto3" json:"customerName"`
	// 工单类型
	OrderType int32 `protobuf:"varint,8,opt,name=orderType,proto3" json:"orderType"`
	// 下单时间
	OrderTime string `protobuf:"bytes,9,opt,name=orderTime,proto3" json:"orderTime"`
	// 下单数量
	OrderQTY int32 `protobuf:"varint,10,opt,name=orderQTY,proto3" json:"orderQTY"`
	// 成品仓库
	Warehouse string `protobuf:"bytes,11,opt,name=warehouse,proto3" json:"warehouse"`
	// 成品入库单
	ReceiptNoteNo string `protobuf:"bytes,12,opt,name=receiptNoteNo,proto3" json:"receiptNoteNo"`
	// 生产班组
	ProductionTeam string `protobuf:"bytes,13,opt,name=productionTeam,proto3" json:"productionTeam"`
	// 生产优先级
	PriorityLevel int32 `protobuf:"varint,14,opt,name=priorityLevel,proto3" json:"priorityLevel"`
	// 交货期限
	DeliveryDate string `protobuf:"bytes,15,opt,name=deliveryDate,proto3" json:"deliveryDate"`
	// 创建时间
	CreateTime string `protobuf:"bytes,16,opt,name=createTime,proto3" json:"createTime"`
	// 创建人员ID
	CreateUserID   string `protobuf:"bytes,17,opt,name=createUserID,proto3" json:"createUserID"`
	CreateUserName string `protobuf:"bytes,47,opt,name=createUserName,proto3" json:"createUserName"`
	// 发放时间
	ReleaseTime string `protobuf:"bytes,18,opt,name=releaseTime,proto3" json:"releaseTime"`
	// 选配信息
	SelectedOptions string `protobuf:"bytes,19,opt,name=selectedOptions,proto3" json:"selectedOptions"`
	// 特性简述
	PropertyBrief string `protobuf:"bytes,20,opt,name=propertyBrief,proto3" json:"propertyBrief"`
	// 标准节拍
	StandardWorkTime int32 `protobuf:"varint,21,opt,name=standardWorkTime,proto3" json:"standardWorkTime"`
	// 已发料数量
	IssuedQTY int32 `protobuf:"varint,22,opt,name=issuedQTY,proto3" json:"issuedQTY"`
	// 最新发料时间
	LastIssueTime string `protobuf:"bytes,23,opt,name=lastIssueTime,proto3" json:"lastIssueTime"`
	// 预计开工时间
	EstimateStartTime string `protobuf:"bytes,24,opt,name=estimateStartTime,proto3" json:"estimateStartTime"`
	// 实际开工时间
	ActualStartTime string `protobuf:"bytes,25,opt,name=actualStartTime,proto3" json:"actualStartTime"`
	// 已开工数量
	StartedQTY int32 `protobuf:"varint,26,opt,name=startedQTY,proto3" json:"startedQTY"`
	// 已淘汰数量
	ObsoletedQTY int32 `protobuf:"varint,27,opt,name=obsoletedQTY,proto3" json:"obsoletedQTY"`
	// 已完工数量
	FinishedQTY int32 `protobuf:"varint,28,opt,name=finishedQTY,proto3" json:"finishedQTY"`
	// 预计单件耗时
	EstimateConsumeTimePerPiece int32 `protobuf:"varint,29,opt,name=estimateConsumeTimePerPiece,proto3" json:"estimateConsumeTimePerPiece"`
	// 预计完工时间
	EstimateFinishTime string `protobuf:"bytes,30,opt,name=estimateFinishTime,proto3" json:"estimateFinishTime"`
	// 实际完工时间
	ActualFinishTime string `protobuf:"bytes,31,opt,name=actualFinishTime,proto3" json:"actualFinishTime"`
	// 平均单件耗时
	AverageConsumeTimePerPiece int32 `protobuf:"varint,32,opt,name=averageConsumeTimePerPiece,proto3" json:"averageConsumeTimePerPiece"`
	// 已入库数量
	DepositedQTY int32 `protobuf:"varint,33,opt,name=depositedQTY,proto3" json:"depositedQTY"`
	// 最新入库时间
	LastDepositTime string `protobuf:"bytes,34,opt,name=lastDepositTime,proto3" json:"lastDepositTime"`
	// 当前状态
	CurrentState string `protobuf:"bytes,35,opt,name=currentState,proto3" json:"currentState"`
	// 最新更新时间
	LastUpdateTime string `protobuf:"bytes,36,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime"`
	// 备注
	Remark string `protobuf:"bytes,37,opt,name=remark,proto3" json:"remark"`
	// 产品型号ID
	ProductModelID string            `protobuf:"bytes,38,opt,name=productModelID,proto3" json:"productModelID"`
	ProductModel   *ProductModelInfo `protobuf:"bytes,39,opt,name=productModel,proto3" json:"productModel"`
	// 发放产线ID
	ProductionLineID string              `protobuf:"bytes,40,opt,name=productionLineID,proto3" json:"productionLineID"`
	ProductionLine   *ProductionLineInfo `protobuf:"bytes,41,opt,name=productionLine,proto3" json:"productionLine"`
	// 工单附件
	ProductOrderAttachments []*ProductOrderAttachmentInfo `protobuf:"bytes,50,rep,name=productOrderAttachments,proto3" json:"productOrderAttachments"`
	// 工单BOM
	ProductOrderBoms []*ProductOrderBomInfo `protobuf:"bytes,42,rep,name=productOrderBoms,proto3" json:"productOrderBoms"`
	// 产品信息
	ProductInfos []*ProductInfoInfo `protobuf:"bytes,43,rep,name=productInfos,proto3" json:"productInfos"`
	// 产品工单属性
	ProductOrderAttributes []*ProductOrderAttributeInfo `protobuf:"bytes,44,rep,name=productOrderAttributes,proto3" json:"productOrderAttributes"`
	// 产品工单工序
	ProductOrderProcesses []*ProductOrderProcessInfo `protobuf:"bytes,45,rep,name=productOrderProcesses,proto3" json:"productOrderProcesses"`
	// 产品工单标签
	ProductOrderLabels []*ProductOrderLabelInfo `protobuf:"bytes,49,rep,name=productOrderLabels,proto3" json:"productOrderLabels"`
	// 产品工单包装
	ProductOrderPackages []*ProductOrderPackageInfo `protobuf:"bytes,46,rep,name=productOrderPackages,proto3" json:"productOrderPackages"`
	// 产品工单栈板
	ProductOrderPallets []*ProductOrderPalletInfo `protobuf:"bytes,48,rep,name=productOrderPallets,proto3" json:"productOrderPallets"`
}

func (x *ProductOrderInfo) Reset() {
	*x = ProductOrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOrderInfo) ProtoMessage() {}

func (x *ProductOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOrderInfo.ProtoReflect.Descriptor instead.
func (*ProductOrderInfo) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{0}
}

func (x *ProductOrderInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductOrderInfo) GetProductOrderNo() string {
	if x != nil {
		return x.ProductOrderNo
	}
	return ""
}

func (x *ProductOrderInfo) GetSalesOrderNo() string {
	if x != nil {
		return x.SalesOrderNo
	}
	return ""
}

func (x *ProductOrderInfo) GetItemNo() string {
	if x != nil {
		return x.ItemNo
	}
	return ""
}

func (x *ProductOrderInfo) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *ProductOrderInfo) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *ProductOrderInfo) GetOrderTime() string {
	if x != nil {
		return x.OrderTime
	}
	return ""
}

func (x *ProductOrderInfo) GetOrderQTY() int32 {
	if x != nil {
		return x.OrderQTY
	}
	return 0
}

func (x *ProductOrderInfo) GetWarehouse() string {
	if x != nil {
		return x.Warehouse
	}
	return ""
}

func (x *ProductOrderInfo) GetReceiptNoteNo() string {
	if x != nil {
		return x.ReceiptNoteNo
	}
	return ""
}

func (x *ProductOrderInfo) GetProductionTeam() string {
	if x != nil {
		return x.ProductionTeam
	}
	return ""
}

func (x *ProductOrderInfo) GetPriorityLevel() int32 {
	if x != nil {
		return x.PriorityLevel
	}
	return 0
}

func (x *ProductOrderInfo) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *ProductOrderInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductOrderInfo) GetCreateUserID() string {
	if x != nil {
		return x.CreateUserID
	}
	return ""
}

func (x *ProductOrderInfo) GetCreateUserName() string {
	if x != nil {
		return x.CreateUserName
	}
	return ""
}

func (x *ProductOrderInfo) GetReleaseTime() string {
	if x != nil {
		return x.ReleaseTime
	}
	return ""
}

func (x *ProductOrderInfo) GetSelectedOptions() string {
	if x != nil {
		return x.SelectedOptions
	}
	return ""
}

func (x *ProductOrderInfo) GetPropertyBrief() string {
	if x != nil {
		return x.PropertyBrief
	}
	return ""
}

func (x *ProductOrderInfo) GetStandardWorkTime() int32 {
	if x != nil {
		return x.StandardWorkTime
	}
	return 0
}

func (x *ProductOrderInfo) GetIssuedQTY() int32 {
	if x != nil {
		return x.IssuedQTY
	}
	return 0
}

func (x *ProductOrderInfo) GetLastIssueTime() string {
	if x != nil {
		return x.LastIssueTime
	}
	return ""
}

func (x *ProductOrderInfo) GetEstimateStartTime() string {
	if x != nil {
		return x.EstimateStartTime
	}
	return ""
}

func (x *ProductOrderInfo) GetActualStartTime() string {
	if x != nil {
		return x.ActualStartTime
	}
	return ""
}

func (x *ProductOrderInfo) GetStartedQTY() int32 {
	if x != nil {
		return x.StartedQTY
	}
	return 0
}

func (x *ProductOrderInfo) GetObsoletedQTY() int32 {
	if x != nil {
		return x.ObsoletedQTY
	}
	return 0
}

func (x *ProductOrderInfo) GetFinishedQTY() int32 {
	if x != nil {
		return x.FinishedQTY
	}
	return 0
}

func (x *ProductOrderInfo) GetEstimateConsumeTimePerPiece() int32 {
	if x != nil {
		return x.EstimateConsumeTimePerPiece
	}
	return 0
}

func (x *ProductOrderInfo) GetEstimateFinishTime() string {
	if x != nil {
		return x.EstimateFinishTime
	}
	return ""
}

func (x *ProductOrderInfo) GetActualFinishTime() string {
	if x != nil {
		return x.ActualFinishTime
	}
	return ""
}

func (x *ProductOrderInfo) GetAverageConsumeTimePerPiece() int32 {
	if x != nil {
		return x.AverageConsumeTimePerPiece
	}
	return 0
}

func (x *ProductOrderInfo) GetDepositedQTY() int32 {
	if x != nil {
		return x.DepositedQTY
	}
	return 0
}

func (x *ProductOrderInfo) GetLastDepositTime() string {
	if x != nil {
		return x.LastDepositTime
	}
	return ""
}

func (x *ProductOrderInfo) GetCurrentState() string {
	if x != nil {
		return x.CurrentState
	}
	return ""
}

func (x *ProductOrderInfo) GetLastUpdateTime() string {
	if x != nil {
		return x.LastUpdateTime
	}
	return ""
}

func (x *ProductOrderInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ProductOrderInfo) GetProductModelID() string {
	if x != nil {
		return x.ProductModelID
	}
	return ""
}

func (x *ProductOrderInfo) GetProductModel() *ProductModelInfo {
	if x != nil {
		return x.ProductModel
	}
	return nil
}

func (x *ProductOrderInfo) GetProductionLineID() string {
	if x != nil {
		return x.ProductionLineID
	}
	return ""
}

func (x *ProductOrderInfo) GetProductionLine() *ProductionLineInfo {
	if x != nil {
		return x.ProductionLine
	}
	return nil
}

func (x *ProductOrderInfo) GetProductOrderAttachments() []*ProductOrderAttachmentInfo {
	if x != nil {
		return x.ProductOrderAttachments
	}
	return nil
}

func (x *ProductOrderInfo) GetProductOrderBoms() []*ProductOrderBomInfo {
	if x != nil {
		return x.ProductOrderBoms
	}
	return nil
}

func (x *ProductOrderInfo) GetProductInfos() []*ProductInfoInfo {
	if x != nil {
		return x.ProductInfos
	}
	return nil
}

func (x *ProductOrderInfo) GetProductOrderAttributes() []*ProductOrderAttributeInfo {
	if x != nil {
		return x.ProductOrderAttributes
	}
	return nil
}

func (x *ProductOrderInfo) GetProductOrderProcesses() []*ProductOrderProcessInfo {
	if x != nil {
		return x.ProductOrderProcesses
	}
	return nil
}

func (x *ProductOrderInfo) GetProductOrderLabels() []*ProductOrderLabelInfo {
	if x != nil {
		return x.ProductOrderLabels
	}
	return nil
}

func (x *ProductOrderInfo) GetProductOrderPackages() []*ProductOrderPackageInfo {
	if x != nil {
		return x.ProductOrderPackages
	}
	return nil
}

func (x *ProductOrderInfo) GetProductOrderPallets() []*ProductOrderPalletInfo {
	if x != nil {
		return x.ProductOrderPallets
	}
	return nil
}

type QueryProductOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
	// 生产工单号
	// @inject_tag: uri:"productOrderNo" form:"productOrderNo"
	ProductOrderNo string `protobuf:"bytes,6,opt,name=productOrderNo,proto3" json:"productOrderNo" uri:"productOrderNo" form:"productOrderNo"`
	// 销售单号
	// @inject_tag: uri:"salesOrderNo" form:"salesOrderNo"
	SalesOrderNo string `protobuf:"bytes,7,opt,name=salesOrderNo,proto3" json:"salesOrderNo" uri:"salesOrderNo" form:"salesOrderNo"`
	// 销售项号
	// @inject_tag: uri:"itemNo" form:"itemNo"
	ItemNo string `protobuf:"bytes,8,opt,name=itemNo,proto3" json:"itemNo" uri:"itemNo" form:"itemNo"`
	// 创建时间开始
	// @inject_tag: uri:"createTime0" form:"createTime0"
	CreateTime0 string `protobuf:"bytes,18,opt,name=createTime0,proto3" json:"createTime0" uri:"createTime0" form:"createTime0"`
	// 创建时间结束
	// @inject_tag: uri:"createTime1" form:"createTime1"
	CreateTime1 string `protobuf:"bytes,19,opt,name=createTime1,proto3" json:"createTime1" uri:"createTime1" form:"createTime1"`
}

func (x *QueryProductOrderRequest) Reset() {
	*x = QueryProductOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductOrderRequest) ProtoMessage() {}

func (x *QueryProductOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductOrderRequest.ProtoReflect.Descriptor instead.
func (*QueryProductOrderRequest) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{1}
}

func (x *QueryProductOrderRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryProductOrderRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryProductOrderRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

func (x *QueryProductOrderRequest) GetProductOrderNo() string {
	if x != nil {
		return x.ProductOrderNo
	}
	return ""
}

func (x *QueryProductOrderRequest) GetSalesOrderNo() string {
	if x != nil {
		return x.SalesOrderNo
	}
	return ""
}

func (x *QueryProductOrderRequest) GetItemNo() string {
	if x != nil {
		return x.ItemNo
	}
	return ""
}

func (x *QueryProductOrderRequest) GetCreateTime0() string {
	if x != nil {
		return x.CreateTime0
	}
	return ""
}

func (x *QueryProductOrderRequest) GetCreateTime1() string {
	if x != nil {
		return x.CreateTime1
	}
	return ""
}

type QueryProductOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductOrderInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64               `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64               `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64               `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryProductOrderResponse) Reset() {
	*x = QueryProductOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductOrderResponse) ProtoMessage() {}

func (x *QueryProductOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductOrderResponse.ProtoReflect.Descriptor instead.
func (*QueryProductOrderResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{2}
}

func (x *QueryProductOrderResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryProductOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryProductOrderResponse) GetData() []*ProductOrderInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryProductOrderResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryProductOrderResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryProductOrderResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllProductOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductOrderInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllProductOrderResponse) Reset() {
	*x = GetAllProductOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProductOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductOrderResponse) ProtoMessage() {}

func (x *GetAllProductOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductOrderResponse.ProtoReflect.Descriptor instead.
func (*GetAllProductOrderResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllProductOrderResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllProductOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllProductOrderResponse) GetData() []*ProductOrderInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductOrderDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code              `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *ProductOrderInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetProductOrderDetailResponse) Reset() {
	*x = GetProductOrderDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductOrderDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductOrderDetailResponse) ProtoMessage() {}

func (x *GetProductOrderDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductOrderDetailResponse.ProtoReflect.Descriptor instead.
func (*GetProductOrderDetailResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{4}
}

func (x *GetProductOrderDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetProductOrderDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductOrderDetailResponse) GetData() *ProductOrderInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSerialNo string `protobuf:"bytes,1,opt,name=productSerialNo,proto3" json:"productSerialNo"`
}

func (x *GetProductInfoRequest) Reset() {
	*x = GetProductInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductInfoRequest) ProtoMessage() {}

func (x *GetProductInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductInfoRequest.ProtoReflect.Descriptor instead.
func (*GetProductInfoRequest) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{5}
}

func (x *GetProductInfoRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

type ProductInfoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	// 产品序列号
	ProductSerialNo string `protobuf:"bytes,3,opt,name=productSerialNo,proto3" json:"productSerialNo"`
	// 防伪码
	SecurityCode string `protobuf:"bytes,4,opt,name=securityCode,proto3" json:"securityCode"`
	// 防伪链接
	SecurityUrl string `protobuf:"bytes,5,opt,name=securityUrl,proto3" json:"securityUrl"`
	// 创建时间
	CreateTime string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime"`
	// 创建人员ID
	CreateUserID   string `protobuf:"bytes,7,opt,name=createUserID,proto3" json:"createUserID"`
	CreateUserName string `protobuf:"bytes,21,opt,name=createUserName,proto3" json:"createUserName"`
	// 发放时间
	ReleaseTime string `protobuf:"bytes,8,opt,name=releaseTime,proto3" json:"releaseTime"`
	// 发料时间
	IssuedTime string `protobuf:"bytes,9,opt,name=issuedTime,proto3" json:"issuedTime"`
	// 上线时间
	StartedTime string `protobuf:"bytes,10,opt,name=startedTime,proto3" json:"startedTime"`
	// 剩余工序
	RemainingRoutes int32 `protobuf:"varint,11,opt,name=remainingRoutes,proto3" json:"remainingRoutes"`
	// 预计下线时间
	EstimateTime string `protobuf:"bytes,12,opt,name=estimateTime,proto3" json:"estimateTime"`
	// 下线时间
	FinishedTime string `protobuf:"bytes,13,opt,name=finishedTime,proto3" json:"finishedTime"`
	// 入库时间
	DepositedTime string `protobuf:"bytes,14,opt,name=depositedTime,proto3" json:"depositedTime"`
	// 当前状态
	CurrentState string `protobuf:"bytes,15,opt,name=currentState,proto3" json:"currentState"`
	// 更新时间
	LastUpdateTime string `protobuf:"bytes,16,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime"`
	// 备注
	Remark string `protobuf:"bytes,17,opt,name=remark,proto3" json:"remark"`
	// 产品工单ID
	ProductOrderID string            `protobuf:"bytes,18,opt,name=productOrderID,proto3" json:"productOrderID"`
	ProductOrder   *ProductOrderInfo `protobuf:"bytes,20,opt,name=productOrder,proto3" json:"productOrder"`
	// 当前工序ID
	ProductionProcessID string `protobuf:"bytes,19,opt,name=productionProcessID,proto3" json:"productionProcessID"`
}

func (x *ProductInfoInfo) Reset() {
	*x = ProductInfoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoInfo) ProtoMessage() {}

func (x *ProductInfoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoInfo.ProtoReflect.Descriptor instead.
func (*ProductInfoInfo) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{6}
}

func (x *ProductInfoInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductInfoInfo) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *ProductInfoInfo) GetSecurityCode() string {
	if x != nil {
		return x.SecurityCode
	}
	return ""
}

func (x *ProductInfoInfo) GetSecurityUrl() string {
	if x != nil {
		return x.SecurityUrl
	}
	return ""
}

func (x *ProductInfoInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductInfoInfo) GetCreateUserID() string {
	if x != nil {
		return x.CreateUserID
	}
	return ""
}

func (x *ProductInfoInfo) GetCreateUserName() string {
	if x != nil {
		return x.CreateUserName
	}
	return ""
}

func (x *ProductInfoInfo) GetReleaseTime() string {
	if x != nil {
		return x.ReleaseTime
	}
	return ""
}

func (x *ProductInfoInfo) GetIssuedTime() string {
	if x != nil {
		return x.IssuedTime
	}
	return ""
}

func (x *ProductInfoInfo) GetStartedTime() string {
	if x != nil {
		return x.StartedTime
	}
	return ""
}

func (x *ProductInfoInfo) GetRemainingRoutes() int32 {
	if x != nil {
		return x.RemainingRoutes
	}
	return 0
}

func (x *ProductInfoInfo) GetEstimateTime() string {
	if x != nil {
		return x.EstimateTime
	}
	return ""
}

func (x *ProductInfoInfo) GetFinishedTime() string {
	if x != nil {
		return x.FinishedTime
	}
	return ""
}

func (x *ProductInfoInfo) GetDepositedTime() string {
	if x != nil {
		return x.DepositedTime
	}
	return ""
}

func (x *ProductInfoInfo) GetCurrentState() string {
	if x != nil {
		return x.CurrentState
	}
	return ""
}

func (x *ProductInfoInfo) GetLastUpdateTime() string {
	if x != nil {
		return x.LastUpdateTime
	}
	return ""
}

func (x *ProductInfoInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ProductInfoInfo) GetProductOrderID() string {
	if x != nil {
		return x.ProductOrderID
	}
	return ""
}

func (x *ProductInfoInfo) GetProductOrder() *ProductOrderInfo {
	if x != nil {
		return x.ProductOrder
	}
	return nil
}

func (x *ProductInfoInfo) GetProductionProcessID() string {
	if x != nil {
		return x.ProductionProcessID
	}
	return ""
}

type QueryProductInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
	// 产品序列号
	// @inject_tag: uri:"productSerialNo" form:"productSerialNo"
	ProductSerialNo string `protobuf:"bytes,5,opt,name=productSerialNo,proto3" json:"productSerialNo" uri:"productSerialNo" form:"productSerialNo"`
	// 创建时间开始
	// @inject_tag: uri:"createTime0" form:"createTime0"
	CreateTime0 string `protobuf:"bytes,8,opt,name=createTime0,proto3" json:"createTime0" uri:"createTime0" form:"createTime0"`
	// 创建时间结束
	// @inject_tag: uri:"createTime1" form:"createTime1"
	CreateTime1 string `protobuf:"bytes,9,opt,name=createTime1,proto3" json:"createTime1" uri:"createTime1" form:"createTime1"`
	// 生产工单号
	// @inject_tag: uri:"productOrderNo" form:"productOrderNo"
	ProductOrderNo string `protobuf:"bytes,10,opt,name=productOrderNo,proto3" json:"productOrderNo" uri:"productOrderNo" form:"productOrderNo"`
	// 当前状态
	// @inject_tag: uri:"currentState" form:"currentState"
	CurrentState string `protobuf:"bytes,17,opt,name=currentState,proto3" json:"currentState" uri:"currentState" form:"currentState"`
}

func (x *QueryProductInfoRequest) Reset() {
	*x = QueryProductInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductInfoRequest) ProtoMessage() {}

func (x *QueryProductInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryProductInfoRequest) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{7}
}

func (x *QueryProductInfoRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryProductInfoRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryProductInfoRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

func (x *QueryProductInfoRequest) GetProductSerialNo() string {
	if x != nil {
		return x.ProductSerialNo
	}
	return ""
}

func (x *QueryProductInfoRequest) GetCreateTime0() string {
	if x != nil {
		return x.CreateTime0
	}
	return ""
}

func (x *QueryProductInfoRequest) GetCreateTime1() string {
	if x != nil {
		return x.CreateTime1
	}
	return ""
}

func (x *QueryProductInfoRequest) GetProductOrderNo() string {
	if x != nil {
		return x.ProductOrderNo
	}
	return ""
}

func (x *QueryProductInfoRequest) GetCurrentState() string {
	if x != nil {
		return x.CurrentState
	}
	return ""
}

type QueryProductInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code               `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductInfoInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64              `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64              `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64              `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryProductInfoResponse) Reset() {
	*x = QueryProductInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductInfoResponse) ProtoMessage() {}

func (x *QueryProductInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductInfoResponse.ProtoReflect.Descriptor instead.
func (*QueryProductInfoResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{8}
}

func (x *QueryProductInfoResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryProductInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryProductInfoResponse) GetData() []*ProductInfoInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryProductInfoResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryProductInfoResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryProductInfoResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllProductInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code               `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductInfoInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllProductInfoResponse) Reset() {
	*x = GetAllProductInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProductInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductInfoResponse) ProtoMessage() {}

func (x *GetAllProductInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAllProductInfoResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllProductInfoResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllProductInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllProductInfoResponse) GetData() []*ProductInfoInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductInfoDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code             `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *ProductInfoInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetProductInfoDetailResponse) Reset() {
	*x = GetProductInfoDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductInfoDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductInfoDetailResponse) ProtoMessage() {}

func (x *GetProductInfoDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductInfoDetailResponse.ProtoReflect.Descriptor instead.
func (*GetProductInfoDetailResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{10}
}

func (x *GetProductInfoDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetProductInfoDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductInfoDetailResponse) GetData() *ProductInfoInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductOrderAttributeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 值
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	// 描述
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description"`
	// 产品特性ID
	ProductAttributeID string `protobuf:"bytes,4,opt,name=productAttributeID,proto3" json:"productAttributeID"`
	// 产品特性
	ProductAttribute *ProductAttributeInfo `protobuf:"bytes,5,opt,name=productAttribute,proto3" json:"productAttribute"`
	// 创建时间
	CreateTime string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime"`
	// 创建人员ID
	CreateUserID   string `protobuf:"bytes,7,opt,name=createUserID,proto3" json:"createUserID"`
	CreateUserName string `protobuf:"bytes,10,opt,name=createUserName,proto3" json:"createUserName"`
	// 隶属工单ID
	ProductOrderID string `protobuf:"bytes,8,opt,name=productOrderID,proto3" json:"productOrderID"`
	// 隶属工单
	ProductOrder *ProductOrderInfo `protobuf:"bytes,9,opt,name=productOrder,proto3" json:"productOrder"`
}

func (x *ProductOrderAttributeInfo) Reset() {
	*x = ProductOrderAttributeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOrderAttributeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOrderAttributeInfo) ProtoMessage() {}

func (x *ProductOrderAttributeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOrderAttributeInfo.ProtoReflect.Descriptor instead.
func (*ProductOrderAttributeInfo) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{11}
}

func (x *ProductOrderAttributeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductOrderAttributeInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ProductOrderAttributeInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductOrderAttributeInfo) GetProductAttributeID() string {
	if x != nil {
		return x.ProductAttributeID
	}
	return ""
}

func (x *ProductOrderAttributeInfo) GetProductAttribute() *ProductAttributeInfo {
	if x != nil {
		return x.ProductAttribute
	}
	return nil
}

func (x *ProductOrderAttributeInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductOrderAttributeInfo) GetCreateUserID() string {
	if x != nil {
		return x.CreateUserID
	}
	return ""
}

func (x *ProductOrderAttributeInfo) GetCreateUserName() string {
	if x != nil {
		return x.CreateUserName
	}
	return ""
}

func (x *ProductOrderAttributeInfo) GetProductOrderID() string {
	if x != nil {
		return x.ProductOrderID
	}
	return ""
}

func (x *ProductOrderAttributeInfo) GetProductOrder() *ProductOrderInfo {
	if x != nil {
		return x.ProductOrder
	}
	return nil
}

type QueryProductOrderAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
	// 工单号
	// @inject_tag: uri:"productOrderNo" form:"productOrderNo"
	ProductOrderNo string `protobuf:"bytes,4,opt,name=productOrderNo,proto3" json:"productOrderNo" uri:"productOrderNo" form:"productOrderNo"`
	// 代号或描述
	// @inject_tag: uri:"code" form:"code"
	Code string `protobuf:"bytes,5,opt,name=code,proto3" json:"code" uri:"code" form:"code"`
	// @inject_tag: uri:"productOrderID" form:"productOrderID"
	ProductOrderID string `protobuf:"bytes,6,opt,name=productOrderID,proto3" json:"productOrderID" uri:"productOrderID" form:"productOrderID"`
}

func (x *QueryProductOrderAttributeRequest) Reset() {
	*x = QueryProductOrderAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductOrderAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductOrderAttributeRequest) ProtoMessage() {}

func (x *QueryProductOrderAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductOrderAttributeRequest.ProtoReflect.Descriptor instead.
func (*QueryProductOrderAttributeRequest) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{12}
}

func (x *QueryProductOrderAttributeRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryProductOrderAttributeRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryProductOrderAttributeRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

func (x *QueryProductOrderAttributeRequest) GetProductOrderNo() string {
	if x != nil {
		return x.ProductOrderNo
	}
	return ""
}

func (x *QueryProductOrderAttributeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *QueryProductOrderAttributeRequest) GetProductOrderID() string {
	if x != nil {
		return x.ProductOrderID
	}
	return ""
}

type QueryProductOrderAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                         `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductOrderAttributeInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64                        `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64                        `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64                        `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryProductOrderAttributeResponse) Reset() {
	*x = QueryProductOrderAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductOrderAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductOrderAttributeResponse) ProtoMessage() {}

func (x *QueryProductOrderAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductOrderAttributeResponse.ProtoReflect.Descriptor instead.
func (*QueryProductOrderAttributeResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{13}
}

func (x *QueryProductOrderAttributeResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryProductOrderAttributeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryProductOrderAttributeResponse) GetData() []*ProductOrderAttributeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryProductOrderAttributeResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryProductOrderAttributeResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryProductOrderAttributeResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllProductOrderAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                         `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductOrderAttributeInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllProductOrderAttributeResponse) Reset() {
	*x = GetAllProductOrderAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProductOrderAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductOrderAttributeResponse) ProtoMessage() {}

func (x *GetAllProductOrderAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductOrderAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetAllProductOrderAttributeResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{14}
}

func (x *GetAllProductOrderAttributeResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllProductOrderAttributeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllProductOrderAttributeResponse) GetData() []*ProductOrderAttributeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductOrderAttributeDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                       `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *ProductOrderAttributeInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetProductOrderAttributeDetailResponse) Reset() {
	*x = GetProductOrderAttributeDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductOrderAttributeDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductOrderAttributeDetailResponse) ProtoMessage() {}

func (x *GetProductOrderAttributeDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductOrderAttributeDetailResponse.ProtoReflect.Descriptor instead.
func (*GetProductOrderAttributeDetailResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{15}
}

func (x *GetProductOrderAttributeDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetProductOrderAttributeDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductOrderAttributeDetailResponse) GetData() *ProductOrderAttributeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductOrderPalletInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	// 栈板编号
	PalletNo string `protobuf:"bytes,3,opt,name=palletNo,proto3" json:"palletNo"`
	// 栈板序号
	PalletSn string `protobuf:"bytes,4,opt,name=palletSn,proto3" json:"palletSn"`
	// 创建时间
	CreateTime string `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime"`
	// 码垛箱数
	PackageQuantity int32 `protobuf:"varint,6,opt,name=packageQuantity,proto3" json:"packageQuantity"`
	// 当前状态
	CurrentState string `protobuf:"bytes,7,opt,name=currentState,proto3" json:"currentState"`
	// 状态变更时间
	LastUpdateTime string `protobuf:"bytes,8,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime"`
	// 备注
	Remark string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark"`
	// 码垛规则ID
	ProductPackageStackRuleID string                       `protobuf:"bytes,10,opt,name=productPackageStackRuleID,proto3" json:"productPackageStackRuleID"`
	ProductPackageStackRule   *ProductPackageStackRuleInfo `protobuf:"bytes,11,opt,name=productPackageStackRule,proto3" json:"productPackageStackRule"`
	// 归属工单ID
	ProductOrderID string            `protobuf:"bytes,12,opt,name=productOrderID,proto3" json:"productOrderID"`
	ProductOrder   *ProductOrderInfo `protobuf:"bytes,13,opt,name=productOrder,proto3" json:"productOrder"`
}

func (x *ProductOrderPalletInfo) Reset() {
	*x = ProductOrderPalletInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOrderPalletInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOrderPalletInfo) ProtoMessage() {}

func (x *ProductOrderPalletInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOrderPalletInfo.ProtoReflect.Descriptor instead.
func (*ProductOrderPalletInfo) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{16}
}

func (x *ProductOrderPalletInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductOrderPalletInfo) GetPalletNo() string {
	if x != nil {
		return x.PalletNo
	}
	return ""
}

func (x *ProductOrderPalletInfo) GetPalletSn() string {
	if x != nil {
		return x.PalletSn
	}
	return ""
}

func (x *ProductOrderPalletInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductOrderPalletInfo) GetPackageQuantity() int32 {
	if x != nil {
		return x.PackageQuantity
	}
	return 0
}

func (x *ProductOrderPalletInfo) GetCurrentState() string {
	if x != nil {
		return x.CurrentState
	}
	return ""
}

func (x *ProductOrderPalletInfo) GetLastUpdateTime() string {
	if x != nil {
		return x.LastUpdateTime
	}
	return ""
}

func (x *ProductOrderPalletInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ProductOrderPalletInfo) GetProductPackageStackRuleID() string {
	if x != nil {
		return x.ProductPackageStackRuleID
	}
	return ""
}

func (x *ProductOrderPalletInfo) GetProductPackageStackRule() *ProductPackageStackRuleInfo {
	if x != nil {
		return x.ProductPackageStackRule
	}
	return nil
}

func (x *ProductOrderPalletInfo) GetProductOrderID() string {
	if x != nil {
		return x.ProductOrderID
	}
	return ""
}

func (x *ProductOrderPalletInfo) GetProductOrder() *ProductOrderInfo {
	if x != nil {
		return x.ProductOrder
	}
	return nil
}

type QueryProductOrderPalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
	// 栈板编号
	// @inject_tag: uri:"palletNo" form:"palletNo"
	PalletNo string `protobuf:"bytes,5,opt,name=palletNo,proto3" json:"palletNo" uri:"palletNo" form:"palletNo"`
	// 栈板序号
	// @inject_tag: uri:"palletSn" form:"palletSn"
	PalletSn string `protobuf:"bytes,6,opt,name=palletSn,proto3" json:"palletSn" uri:"palletSn" form:"palletSn"`
	// 创建时间开始
	// @inject_tag: uri:"createTime0" form:"createTime0"
	CreateTime0 string `protobuf:"bytes,7,opt,name=createTime0,proto3" json:"createTime0" uri:"createTime0" form:"createTime0"`
	// 创建时间结束
	// @inject_tag: uri:"createTime1" form:"createTime1"
	CreateTime1 string `protobuf:"bytes,8,opt,name=createTime1,proto3" json:"createTime1" uri:"createTime1" form:"createTime1"`
	// 当前状态
	// @inject_tag: uri:"currentState" form:"currentState"
	CurrentState string `protobuf:"bytes,9,opt,name=currentState,proto3" json:"currentState" uri:"currentState" form:"currentState"`
	// 生产工单号
	// @inject_tag: uri:"productOrderNo" form:"productOrderNo"
	ProductOrderNo string `protobuf:"bytes,10,opt,name=productOrderNo,proto3" json:"productOrderNo" uri:"productOrderNo" form:"productOrderNo"`
}

func (x *QueryProductOrderPalletRequest) Reset() {
	*x = QueryProductOrderPalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductOrderPalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductOrderPalletRequest) ProtoMessage() {}

func (x *QueryProductOrderPalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductOrderPalletRequest.ProtoReflect.Descriptor instead.
func (*QueryProductOrderPalletRequest) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{17}
}

func (x *QueryProductOrderPalletRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryProductOrderPalletRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryProductOrderPalletRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

func (x *QueryProductOrderPalletRequest) GetPalletNo() string {
	if x != nil {
		return x.PalletNo
	}
	return ""
}

func (x *QueryProductOrderPalletRequest) GetPalletSn() string {
	if x != nil {
		return x.PalletSn
	}
	return ""
}

func (x *QueryProductOrderPalletRequest) GetCreateTime0() string {
	if x != nil {
		return x.CreateTime0
	}
	return ""
}

func (x *QueryProductOrderPalletRequest) GetCreateTime1() string {
	if x != nil {
		return x.CreateTime1
	}
	return ""
}

func (x *QueryProductOrderPalletRequest) GetCurrentState() string {
	if x != nil {
		return x.CurrentState
	}
	return ""
}

func (x *QueryProductOrderPalletRequest) GetProductOrderNo() string {
	if x != nil {
		return x.ProductOrderNo
	}
	return ""
}

type QueryProductOrderPalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                      `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductOrderPalletInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64                     `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64                     `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64                     `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryProductOrderPalletResponse) Reset() {
	*x = QueryProductOrderPalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductOrderPalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductOrderPalletResponse) ProtoMessage() {}

func (x *QueryProductOrderPalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductOrderPalletResponse.ProtoReflect.Descriptor instead.
func (*QueryProductOrderPalletResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{18}
}

func (x *QueryProductOrderPalletResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryProductOrderPalletResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryProductOrderPalletResponse) GetData() []*ProductOrderPalletInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryProductOrderPalletResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryProductOrderPalletResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryProductOrderPalletResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllProductOrderPalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                      `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductOrderPalletInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllProductOrderPalletResponse) Reset() {
	*x = GetAllProductOrderPalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProductOrderPalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductOrderPalletResponse) ProtoMessage() {}

func (x *GetAllProductOrderPalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductOrderPalletResponse.ProtoReflect.Descriptor instead.
func (*GetAllProductOrderPalletResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{19}
}

func (x *GetAllProductOrderPalletResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllProductOrderPalletResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllProductOrderPalletResponse) GetData() []*ProductOrderPalletInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductOrderPalletDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                    `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *ProductOrderPalletInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetProductOrderPalletDetailResponse) Reset() {
	*x = GetProductOrderPalletDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductOrderPalletDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductOrderPalletDetailResponse) ProtoMessage() {}

func (x *GetProductOrderPalletDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductOrderPalletDetailResponse.ProtoReflect.Descriptor instead.
func (*GetProductOrderPalletDetailResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{20}
}

func (x *GetProductOrderPalletDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetProductOrderPalletDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductOrderPalletDetailResponse) GetData() *ProductOrderPalletInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductOrderLabelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 归属工单ID
	ProductOrderID string            `protobuf:"bytes,2,opt,name=productOrderID,proto3" json:"productOrderID"`
	ProductOrder   *ProductOrderInfo `protobuf:"bytes,3,opt,name=productOrder,proto3" json:"productOrder"`
	// 标签类型ID
	LabelTypeID string         `protobuf:"bytes,4,opt,name=labelTypeID,proto3" json:"labelTypeID"`
	LabelType   *LabelTypeInfo `protobuf:"bytes,5,opt,name=labelType,proto3" json:"labelType"`
	// 模板文件
	FilePath string `protobuf:"bytes,6,opt,name=filePath,proto3" json:"filePath"`
	// 引用次数
	ReferTimes int32 `protobuf:"varint,7,opt,name=referTimes,proto3" json:"referTimes"`
	// 需要复核
	DoubleCheck bool `protobuf:"varint,8,opt,name=doubleCheck,proto3" json:"doubleCheck"`
	// 创建时间
	CreateTime string `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime"`
	// 创建人员ID
	CreateUserID   string `protobuf:"bytes,10,opt,name=createUserID,proto3" json:"createUserID"`
	CreateUserName string `protobuf:"bytes,16,opt,name=createUserName,proto3" json:"createUserName"`
	// 复核时间
	CheckTime string `protobuf:"bytes,11,opt,name=checkTime,proto3" json:"checkTime"`
	// 复核人员ID
	CheckUserID   string `protobuf:"bytes,12,opt,name=checkUserID,proto3" json:"checkUserID"`
	CheckUserName string `protobuf:"bytes,17,opt,name=checkUserName,proto3" json:"checkUserName"`
	// 当前状态
	CurrentState string `protobuf:"bytes,13,opt,name=currentState,proto3" json:"currentState"`
	// 状态变更时间
	LastUpdateTime string `protobuf:"bytes,14,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime"`
	// 标签参数
	ProductOrderLabelParameters []*ProductOrderLabelParameterInfo `protobuf:"bytes,15,rep,name=productOrderLabelParameters,proto3" json:"productOrderLabelParameters"`
}

func (x *ProductOrderLabelInfo) Reset() {
	*x = ProductOrderLabelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOrderLabelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOrderLabelInfo) ProtoMessage() {}

func (x *ProductOrderLabelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOrderLabelInfo.ProtoReflect.Descriptor instead.
func (*ProductOrderLabelInfo) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{21}
}

func (x *ProductOrderLabelInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetProductOrderID() string {
	if x != nil {
		return x.ProductOrderID
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetProductOrder() *ProductOrderInfo {
	if x != nil {
		return x.ProductOrder
	}
	return nil
}

func (x *ProductOrderLabelInfo) GetLabelTypeID() string {
	if x != nil {
		return x.LabelTypeID
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetLabelType() *LabelTypeInfo {
	if x != nil {
		return x.LabelType
	}
	return nil
}

func (x *ProductOrderLabelInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetReferTimes() int32 {
	if x != nil {
		return x.ReferTimes
	}
	return 0
}

func (x *ProductOrderLabelInfo) GetDoubleCheck() bool {
	if x != nil {
		return x.DoubleCheck
	}
	return false
}

func (x *ProductOrderLabelInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetCreateUserID() string {
	if x != nil {
		return x.CreateUserID
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetCreateUserName() string {
	if x != nil {
		return x.CreateUserName
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetCheckTime() string {
	if x != nil {
		return x.CheckTime
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetCheckUserID() string {
	if x != nil {
		return x.CheckUserID
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetCheckUserName() string {
	if x != nil {
		return x.CheckUserName
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetCurrentState() string {
	if x != nil {
		return x.CurrentState
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetLastUpdateTime() string {
	if x != nil {
		return x.LastUpdateTime
	}
	return ""
}

func (x *ProductOrderLabelInfo) GetProductOrderLabelParameters() []*ProductOrderLabelParameterInfo {
	if x != nil {
		return x.ProductOrderLabelParameters
	}
	return nil
}

type ProductOrderLabelParameterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	ProductOrderLabelID string `protobuf:"bytes,2,opt,name=productOrderLabelID,proto3" json:"productOrderLabelID"`
	Name                string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	FixedValue          string `protobuf:"bytes,4,opt,name=fixedValue,proto3" json:"fixedValue"`
	Remark              string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark"`
}

func (x *ProductOrderLabelParameterInfo) Reset() {
	*x = ProductOrderLabelParameterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOrderLabelParameterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOrderLabelParameterInfo) ProtoMessage() {}

func (x *ProductOrderLabelParameterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOrderLabelParameterInfo.ProtoReflect.Descriptor instead.
func (*ProductOrderLabelParameterInfo) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{22}
}

func (x *ProductOrderLabelParameterInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductOrderLabelParameterInfo) GetProductOrderLabelID() string {
	if x != nil {
		return x.ProductOrderLabelID
	}
	return ""
}

func (x *ProductOrderLabelParameterInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductOrderLabelParameterInfo) GetFixedValue() string {
	if x != nil {
		return x.FixedValue
	}
	return ""
}

func (x *ProductOrderLabelParameterInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type QueryProductOrderLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
	// 生产工单号
	// @inject_tag: uri:"productOrderNo" form:"productOrderNo"
	ProductOrderNo string `protobuf:"bytes,4,opt,name=productOrderNo,proto3" json:"productOrderNo" uri:"productOrderNo" form:"productOrderNo"`
	// 当前状态
	// @inject_tag: uri:"currentState" form:"currentState"
	CurrentState string `protobuf:"bytes,5,opt,name=currentState,proto3" json:"currentState" uri:"currentState" form:"currentState"`
	// 创建时间开始
	// @inject_tag: uri:"createTime0" form:"createTime0"
	CreateTime0 string `protobuf:"bytes,6,opt,name=createTime0,proto3" json:"createTime0" uri:"createTime0" form:"createTime0"`
	// 创建时间结束
	// @inject_tag: uri:"createTime1" form:"createTime1"
	CreateTime1 string `protobuf:"bytes,7,opt,name=createTime1,proto3" json:"createTime1" uri:"createTime1" form:"createTime1"`
}

func (x *QueryProductOrderLabelRequest) Reset() {
	*x = QueryProductOrderLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductOrderLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductOrderLabelRequest) ProtoMessage() {}

func (x *QueryProductOrderLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductOrderLabelRequest.ProtoReflect.Descriptor instead.
func (*QueryProductOrderLabelRequest) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{23}
}

func (x *QueryProductOrderLabelRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryProductOrderLabelRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryProductOrderLabelRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

func (x *QueryProductOrderLabelRequest) GetProductOrderNo() string {
	if x != nil {
		return x.ProductOrderNo
	}
	return ""
}

func (x *QueryProductOrderLabelRequest) GetCurrentState() string {
	if x != nil {
		return x.CurrentState
	}
	return ""
}

func (x *QueryProductOrderLabelRequest) GetCreateTime0() string {
	if x != nil {
		return x.CreateTime0
	}
	return ""
}

func (x *QueryProductOrderLabelRequest) GetCreateTime1() string {
	if x != nil {
		return x.CreateTime1
	}
	return ""
}

type QueryProductOrderLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                     `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductOrderLabelInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64                    `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64                    `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64                    `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryProductOrderLabelResponse) Reset() {
	*x = QueryProductOrderLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductOrderLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductOrderLabelResponse) ProtoMessage() {}

func (x *QueryProductOrderLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductOrderLabelResponse.ProtoReflect.Descriptor instead.
func (*QueryProductOrderLabelResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{24}
}

func (x *QueryProductOrderLabelResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryProductOrderLabelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryProductOrderLabelResponse) GetData() []*ProductOrderLabelInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryProductOrderLabelResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryProductOrderLabelResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryProductOrderLabelResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllProductOrderLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                     `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductOrderLabelInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllProductOrderLabelResponse) Reset() {
	*x = GetAllProductOrderLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProductOrderLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductOrderLabelResponse) ProtoMessage() {}

func (x *GetAllProductOrderLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductOrderLabelResponse.ProtoReflect.Descriptor instead.
func (*GetAllProductOrderLabelResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{25}
}

func (x *GetAllProductOrderLabelResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllProductOrderLabelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllProductOrderLabelResponse) GetData() []*ProductOrderLabelInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductOrderLabelDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                   `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *ProductOrderLabelInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetProductOrderLabelDetailResponse) Reset() {
	*x = GetProductOrderLabelDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductOrderLabelDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductOrderLabelDetailResponse) ProtoMessage() {}

func (x *GetProductOrderLabelDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductOrderLabelDetailResponse.ProtoReflect.Descriptor instead.
func (*GetProductOrderLabelDetailResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{26}
}

func (x *GetProductOrderLabelDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetProductOrderLabelDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductOrderLabelDetailResponse) GetData() *ProductOrderLabelInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductOrderAttachmentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	// 文件名
	FileName string `protobuf:"bytes,3,opt,name=fileName,proto3" json:"fileName"`
	// 文件类型
	FileType string `protobuf:"bytes,4,opt,name=fileType,proto3" json:"fileType"`
	// 文件大小
	FileSize float32 `protobuf:"fixed32,5,opt,name=fileSize,proto3" json:"fileSize"`
	// 保存文件名
	SavedFileName string `protobuf:"bytes,6,opt,name=savedFileName,proto3" json:"savedFileName"`
	// 文件状态
	FileStatus string `protobuf:"bytes,7,opt,name=fileStatus,proto3" json:"fileStatus"`
	// 创建时间
	CreateTime string `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime"`
	// 创建人员ID
	CreateUserID   string `protobuf:"bytes,9,opt,name=createUserID,proto3" json:"createUserID"`
	CreateUserName string `protobuf:"bytes,11,opt,name=createUserName,proto3" json:"createUserName"`
	// 隶属工单ID
	ProductOrderID string            `protobuf:"bytes,10,opt,name=productOrderID,proto3" json:"productOrderID"`
	ProductOrder   *ProductOrderInfo `protobuf:"bytes,12,opt,name=productOrder,proto3" json:"productOrder"`
}

func (x *ProductOrderAttachmentInfo) Reset() {
	*x = ProductOrderAttachmentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOrderAttachmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOrderAttachmentInfo) ProtoMessage() {}

func (x *ProductOrderAttachmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOrderAttachmentInfo.ProtoReflect.Descriptor instead.
func (*ProductOrderAttachmentInfo) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{27}
}

func (x *ProductOrderAttachmentInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductOrderAttachmentInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ProductOrderAttachmentInfo) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *ProductOrderAttachmentInfo) GetFileSize() float32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *ProductOrderAttachmentInfo) GetSavedFileName() string {
	if x != nil {
		return x.SavedFileName
	}
	return ""
}

func (x *ProductOrderAttachmentInfo) GetFileStatus() string {
	if x != nil {
		return x.FileStatus
	}
	return ""
}

func (x *ProductOrderAttachmentInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductOrderAttachmentInfo) GetCreateUserID() string {
	if x != nil {
		return x.CreateUserID
	}
	return ""
}

func (x *ProductOrderAttachmentInfo) GetCreateUserName() string {
	if x != nil {
		return x.CreateUserName
	}
	return ""
}

func (x *ProductOrderAttachmentInfo) GetProductOrderID() string {
	if x != nil {
		return x.ProductOrderID
	}
	return ""
}

func (x *ProductOrderAttachmentInfo) GetProductOrder() *ProductOrderInfo {
	if x != nil {
		return x.ProductOrder
	}
	return nil
}

type QueryProductOrderAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
}

func (x *QueryProductOrderAttachmentRequest) Reset() {
	*x = QueryProductOrderAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductOrderAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductOrderAttachmentRequest) ProtoMessage() {}

func (x *QueryProductOrderAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductOrderAttachmentRequest.ProtoReflect.Descriptor instead.
func (*QueryProductOrderAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{28}
}

func (x *QueryProductOrderAttachmentRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryProductOrderAttachmentRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryProductOrderAttachmentRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

type QueryProductOrderAttachmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                          `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductOrderAttachmentInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64                         `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64                         `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64                         `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryProductOrderAttachmentResponse) Reset() {
	*x = QueryProductOrderAttachmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductOrderAttachmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductOrderAttachmentResponse) ProtoMessage() {}

func (x *QueryProductOrderAttachmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductOrderAttachmentResponse.ProtoReflect.Descriptor instead.
func (*QueryProductOrderAttachmentResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{29}
}

func (x *QueryProductOrderAttachmentResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryProductOrderAttachmentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryProductOrderAttachmentResponse) GetData() []*ProductOrderAttachmentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryProductOrderAttachmentResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryProductOrderAttachmentResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryProductOrderAttachmentResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllProductOrderAttachmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                          `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductOrderAttachmentInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllProductOrderAttachmentResponse) Reset() {
	*x = GetAllProductOrderAttachmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProductOrderAttachmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductOrderAttachmentResponse) ProtoMessage() {}

func (x *GetAllProductOrderAttachmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductOrderAttachmentResponse.ProtoReflect.Descriptor instead.
func (*GetAllProductOrderAttachmentResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{30}
}

func (x *GetAllProductOrderAttachmentResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllProductOrderAttachmentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllProductOrderAttachmentResponse) GetData() []*ProductOrderAttachmentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductOrderAttachmentDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                        `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *ProductOrderAttachmentInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetProductOrderAttachmentDetailResponse) Reset() {
	*x = GetProductOrderAttachmentDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_order_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductOrderAttachmentDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductOrderAttachmentDetailResponse) ProtoMessage() {}

func (x *GetProductOrderAttachmentDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_order_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductOrderAttachmentDetailResponse.ProtoReflect.Descriptor instead.
func (*GetProductOrderAttachmentDetailResponse) Descriptor() ([]byte, []int) {
	return file_product_order_proto_rawDescGZIP(), []int{31}
}

func (x *GetProductOrderAttachmentDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetProductOrderAttachmentDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductOrderAttachmentDetailResponse) GetData() *ProductOrderAttachmentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_product_order_proto protoreflect.FileDescriptor

var file_product_order_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6d, 0x6f,
	0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x6f,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x11, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x54, 0x59, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x54, 0x59, 0x12,
	0x1c, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x4e, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4e, 0x6f, 0x74,
	0x65, 0x4e, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x57,
	0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x51, 0x54, 0x59, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x51, 0x54, 0x59, 0x12, 0x24, 0x0a,
	0x0d, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x51, 0x54, 0x59, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x51, 0x54, 0x59, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x51, 0x54, 0x59, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x51, 0x54, 0x59, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x51, 0x54, 0x59, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x51, 0x54,
	0x59, 0x12, 0x40, 0x0a, 0x1b, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x50, 0x69,
	0x65, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3e, 0x0a, 0x1a, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x50, 0x69, 0x65, 0x63, 0x65, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x1a, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x50, 0x69, 0x65, 0x63, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x64, 0x51, 0x54, 0x59, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x64,
	0x51, 0x54, 0x59, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x44, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65,
	0x49, 0x44, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6e, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x5b, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x32, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x6f, 0x6d, 0x73, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x2b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x58, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x2c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x54, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x2d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x31, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x52, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x2e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18,
	0x30, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x22, 0x9c, 0x02, 0x0a, 0x18, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x30, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x30, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x31, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x31, 0x22, 0xc9, 0x01, 0x0a, 0x19, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x84, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x87, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x22, 0xf4, 0x05, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a,
	0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x44, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x44, 0x22,
	0xad, 0x02, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x30, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x30, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x31,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x31, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0xc7, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x82, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xad, 0x03, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x44, 0x12, 0x47, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xe1, 0x01, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0xdb, 0x01, 0x0a, 0x22, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x96, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x99, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x04,
	0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3c,
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x19, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x5c, 0x0a, 0x17,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0xc2, 0x02, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x53, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x53, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x30, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x30, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x6f, 0x22, 0xd5, 0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x90, 0x01, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x93, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc7, 0x05, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x67, 0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22,
	0xae, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x89, 0x02, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x30, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x30, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x31, 0x22, 0xd3, 0x01, 0x0a,
	0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x8e, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x03, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x61,
	0x76, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0x7e, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0xdd, 0x01, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x98, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a,
	0x27, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xa5, 0x01, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4a, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0x5c, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x4c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x32, 0x77, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x5e, 0x0a, 0x05, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_product_order_proto_rawDescOnce sync.Once
	file_product_order_proto_rawDescData = file_product_order_proto_rawDesc
)

func file_product_order_proto_rawDescGZIP() []byte {
	file_product_order_proto_rawDescOnce.Do(func() {
		file_product_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_order_proto_rawDescData)
	})
	return file_product_order_proto_rawDescData
}

var file_product_order_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_product_order_proto_goTypes = []interface{}{
	(*ProductOrderInfo)(nil),                        // 0: proto.ProductOrderInfo
	(*QueryProductOrderRequest)(nil),                // 1: proto.QueryProductOrderRequest
	(*QueryProductOrderResponse)(nil),               // 2: proto.QueryProductOrderResponse
	(*GetAllProductOrderResponse)(nil),              // 3: proto.GetAllProductOrderResponse
	(*GetProductOrderDetailResponse)(nil),           // 4: proto.GetProductOrderDetailResponse
	(*GetProductInfoRequest)(nil),                   // 5: proto.GetProductInfoRequest
	(*ProductInfoInfo)(nil),                         // 6: proto.ProductInfoInfo
	(*QueryProductInfoRequest)(nil),                 // 7: proto.QueryProductInfoRequest
	(*QueryProductInfoResponse)(nil),                // 8: proto.QueryProductInfoResponse
	(*GetAllProductInfoResponse)(nil),               // 9: proto.GetAllProductInfoResponse
	(*GetProductInfoDetailResponse)(nil),            // 10: proto.GetProductInfoDetailResponse
	(*ProductOrderAttributeInfo)(nil),               // 11: proto.ProductOrderAttributeInfo
	(*QueryProductOrderAttributeRequest)(nil),       // 12: proto.QueryProductOrderAttributeRequest
	(*QueryProductOrderAttributeResponse)(nil),      // 13: proto.QueryProductOrderAttributeResponse
	(*GetAllProductOrderAttributeResponse)(nil),     // 14: proto.GetAllProductOrderAttributeResponse
	(*GetProductOrderAttributeDetailResponse)(nil),  // 15: proto.GetProductOrderAttributeDetailResponse
	(*ProductOrderPalletInfo)(nil),                  // 16: proto.ProductOrderPalletInfo
	(*QueryProductOrderPalletRequest)(nil),          // 17: proto.QueryProductOrderPalletRequest
	(*QueryProductOrderPalletResponse)(nil),         // 18: proto.QueryProductOrderPalletResponse
	(*GetAllProductOrderPalletResponse)(nil),        // 19: proto.GetAllProductOrderPalletResponse
	(*GetProductOrderPalletDetailResponse)(nil),     // 20: proto.GetProductOrderPalletDetailResponse
	(*ProductOrderLabelInfo)(nil),                   // 21: proto.ProductOrderLabelInfo
	(*ProductOrderLabelParameterInfo)(nil),          // 22: proto.ProductOrderLabelParameterInfo
	(*QueryProductOrderLabelRequest)(nil),           // 23: proto.QueryProductOrderLabelRequest
	(*QueryProductOrderLabelResponse)(nil),          // 24: proto.QueryProductOrderLabelResponse
	(*GetAllProductOrderLabelResponse)(nil),         // 25: proto.GetAllProductOrderLabelResponse
	(*GetProductOrderLabelDetailResponse)(nil),      // 26: proto.GetProductOrderLabelDetailResponse
	(*ProductOrderAttachmentInfo)(nil),              // 27: proto.ProductOrderAttachmentInfo
	(*QueryProductOrderAttachmentRequest)(nil),      // 28: proto.QueryProductOrderAttachmentRequest
	(*QueryProductOrderAttachmentResponse)(nil),     // 29: proto.QueryProductOrderAttachmentResponse
	(*GetAllProductOrderAttachmentResponse)(nil),    // 30: proto.GetAllProductOrderAttachmentResponse
	(*GetProductOrderAttachmentDetailResponse)(nil), // 31: proto.GetProductOrderAttachmentDetailResponse
	(*ProductModelInfo)(nil),                        // 32: proto.ProductModelInfo
	(*ProductionLineInfo)(nil),                      // 33: proto.ProductionLineInfo
	(*ProductOrderBomInfo)(nil),                     // 34: proto.ProductOrderBomInfo
	(*ProductOrderProcessInfo)(nil),                 // 35: proto.ProductOrderProcessInfo
	(*ProductOrderPackageInfo)(nil),                 // 36: proto.ProductOrderPackageInfo
	(Code)(0),                                       // 37: proto.Code
	(*ProductAttributeInfo)(nil),                    // 38: proto.ProductAttributeInfo
	(*ProductPackageStackRuleInfo)(nil),             // 39: proto.ProductPackageStackRuleInfo
	(*LabelTypeInfo)(nil),                           // 40: proto.LabelTypeInfo
	(*GetDetailRequest)(nil),                        // 41: proto.GetDetailRequest
}
var file_product_order_proto_depIdxs = []int32{
	32, // 0: proto.ProductOrderInfo.productModel:type_name -> proto.ProductModelInfo
	33, // 1: proto.ProductOrderInfo.productionLine:type_name -> proto.ProductionLineInfo
	27, // 2: proto.ProductOrderInfo.productOrderAttachments:type_name -> proto.ProductOrderAttachmentInfo
	34, // 3: proto.ProductOrderInfo.productOrderBoms:type_name -> proto.ProductOrderBomInfo
	6,  // 4: proto.ProductOrderInfo.productInfos:type_name -> proto.ProductInfoInfo
	11, // 5: proto.ProductOrderInfo.productOrderAttributes:type_name -> proto.ProductOrderAttributeInfo
	35, // 6: proto.ProductOrderInfo.productOrderProcesses:type_name -> proto.ProductOrderProcessInfo
	21, // 7: proto.ProductOrderInfo.productOrderLabels:type_name -> proto.ProductOrderLabelInfo
	36, // 8: proto.ProductOrderInfo.productOrderPackages:type_name -> proto.ProductOrderPackageInfo
	16, // 9: proto.ProductOrderInfo.productOrderPallets:type_name -> proto.ProductOrderPalletInfo
	37, // 10: proto.QueryProductOrderResponse.code:type_name -> proto.Code
	0,  // 11: proto.QueryProductOrderResponse.data:type_name -> proto.ProductOrderInfo
	37, // 12: proto.GetAllProductOrderResponse.code:type_name -> proto.Code
	0,  // 13: proto.GetAllProductOrderResponse.data:type_name -> proto.ProductOrderInfo
	37, // 14: proto.GetProductOrderDetailResponse.code:type_name -> proto.Code
	0,  // 15: proto.GetProductOrderDetailResponse.data:type_name -> proto.ProductOrderInfo
	0,  // 16: proto.ProductInfoInfo.productOrder:type_name -> proto.ProductOrderInfo
	37, // 17: proto.QueryProductInfoResponse.code:type_name -> proto.Code
	6,  // 18: proto.QueryProductInfoResponse.data:type_name -> proto.ProductInfoInfo
	37, // 19: proto.GetAllProductInfoResponse.code:type_name -> proto.Code
	6,  // 20: proto.GetAllProductInfoResponse.data:type_name -> proto.ProductInfoInfo
	37, // 21: proto.GetProductInfoDetailResponse.code:type_name -> proto.Code
	6,  // 22: proto.GetProductInfoDetailResponse.data:type_name -> proto.ProductInfoInfo
	38, // 23: proto.ProductOrderAttributeInfo.productAttribute:type_name -> proto.ProductAttributeInfo
	0,  // 24: proto.ProductOrderAttributeInfo.productOrder:type_name -> proto.ProductOrderInfo
	37, // 25: proto.QueryProductOrderAttributeResponse.code:type_name -> proto.Code
	11, // 26: proto.QueryProductOrderAttributeResponse.data:type_name -> proto.ProductOrderAttributeInfo
	37, // 27: proto.GetAllProductOrderAttributeResponse.code:type_name -> proto.Code
	11, // 28: proto.GetAllProductOrderAttributeResponse.data:type_name -> proto.ProductOrderAttributeInfo
	37, // 29: proto.GetProductOrderAttributeDetailResponse.code:type_name -> proto.Code
	11, // 30: proto.GetProductOrderAttributeDetailResponse.data:type_name -> proto.ProductOrderAttributeInfo
	39, // 31: proto.ProductOrderPalletInfo.productPackageStackRule:type_name -> proto.ProductPackageStackRuleInfo
	0,  // 32: proto.ProductOrderPalletInfo.productOrder:type_name -> proto.ProductOrderInfo
	37, // 33: proto.QueryProductOrderPalletResponse.code:type_name -> proto.Code
	16, // 34: proto.QueryProductOrderPalletResponse.data:type_name -> proto.ProductOrderPalletInfo
	37, // 35: proto.GetAllProductOrderPalletResponse.code:type_name -> proto.Code
	16, // 36: proto.GetAllProductOrderPalletResponse.data:type_name -> proto.ProductOrderPalletInfo
	37, // 37: proto.GetProductOrderPalletDetailResponse.code:type_name -> proto.Code
	16, // 38: proto.GetProductOrderPalletDetailResponse.data:type_name -> proto.ProductOrderPalletInfo
	0,  // 39: proto.ProductOrderLabelInfo.productOrder:type_name -> proto.ProductOrderInfo
	40, // 40: proto.ProductOrderLabelInfo.labelType:type_name -> proto.LabelTypeInfo
	22, // 41: proto.ProductOrderLabelInfo.productOrderLabelParameters:type_name -> proto.ProductOrderLabelParameterInfo
	37, // 42: proto.QueryProductOrderLabelResponse.code:type_name -> proto.Code
	21, // 43: proto.QueryProductOrderLabelResponse.data:type_name -> proto.ProductOrderLabelInfo
	37, // 44: proto.GetAllProductOrderLabelResponse.code:type_name -> proto.Code
	21, // 45: proto.GetAllProductOrderLabelResponse.data:type_name -> proto.ProductOrderLabelInfo
	37, // 46: proto.GetProductOrderLabelDetailResponse.code:type_name -> proto.Code
	21, // 47: proto.GetProductOrderLabelDetailResponse.data:type_name -> proto.ProductOrderLabelInfo
	0,  // 48: proto.ProductOrderAttachmentInfo.productOrder:type_name -> proto.ProductOrderInfo
	37, // 49: proto.QueryProductOrderAttachmentResponse.code:type_name -> proto.Code
	27, // 50: proto.QueryProductOrderAttachmentResponse.data:type_name -> proto.ProductOrderAttachmentInfo
	37, // 51: proto.GetAllProductOrderAttachmentResponse.code:type_name -> proto.Code
	27, // 52: proto.GetAllProductOrderAttachmentResponse.data:type_name -> proto.ProductOrderAttachmentInfo
	37, // 53: proto.GetProductOrderAttachmentDetailResponse.code:type_name -> proto.Code
	27, // 54: proto.GetProductOrderAttachmentDetailResponse.data:type_name -> proto.ProductOrderAttachmentInfo
	5,  // 55: proto.ProductInfo.Get:input_type -> proto.GetProductInfoRequest
	7,  // 56: proto.ProductInfo.Query:input_type -> proto.QueryProductInfoRequest
	41, // 57: proto.ProductOrder.GetDetail:input_type -> proto.GetDetailRequest
	12, // 58: proto.ProductOrderAttribute.Query:input_type -> proto.QueryProductOrderAttributeRequest
	10, // 59: proto.ProductInfo.Get:output_type -> proto.GetProductInfoDetailResponse
	8,  // 60: proto.ProductInfo.Query:output_type -> proto.QueryProductInfoResponse
	4,  // 61: proto.ProductOrder.GetDetail:output_type -> proto.GetProductOrderDetailResponse
	13, // 62: proto.ProductOrderAttribute.Query:output_type -> proto.QueryProductOrderAttributeResponse
	59, // [59:63] is the sub-list for method output_type
	55, // [55:59] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_product_order_proto_init() }
func file_product_order_proto_init() {
	if File_product_order_proto != nil {
		return
	}
	file_mom_common_proto_init()
	file_product_order_bom_proto_init()
	file_product_model_proto_init()
	file_production_line_proto_init()
	file_product_order_process_proto_init()
	file_product_order_package_proto_init()
	file_product_attribute_proto_init()
	file_product_package_stack_rule_proto_init()
	file_label_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_product_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProductOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductOrderDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProductInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductInfoDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOrderAttributeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductOrderAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductOrderAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProductOrderAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductOrderAttributeDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOrderPalletInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductOrderPalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductOrderPalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProductOrderPalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductOrderPalletDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOrderLabelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOrderLabelParameterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductOrderLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductOrderLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProductOrderLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductOrderLabelDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOrderAttachmentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductOrderAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductOrderAttachmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProductOrderAttachmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_order_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductOrderAttachmentDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_product_order_proto_goTypes,
		DependencyIndexes: file_product_order_proto_depIdxs,
		MessageInfos:      file_product_order_proto_msgTypes,
	}.Build()
	File_product_order_proto = out.File
	file_product_order_proto_rawDesc = nil
	file_product_order_proto_goTypes = nil
	file_product_order_proto_depIdxs = nil
}
