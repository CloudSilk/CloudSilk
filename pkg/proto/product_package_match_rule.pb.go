// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: product_package_match_rule.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductPackageMatchRuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id"`
	// 优先级
	Priority int32 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority"`
	// 使用包装ID
	ProductPackageID string `protobuf:"bytes,5,opt,name=productPackageID,proto3" json:"productPackageID"`
	// 使用包装
	ProductPackage *ProductPackageInfo `protobuf:"bytes,9,opt,name=productPackage,proto3" json:"productPackage"`
	// 是否启用
	Enable bool `protobuf:"varint,6,opt,name=enable,proto3" json:"enable"`
	// 默认匹配
	InitialValue bool `protobuf:"varint,7,opt,name=initialValue,proto3" json:"initialValue"`
	// 备注
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark"`
	// 特征表达式
	AttributeExpressions []*AttributeExpressionInfo `protobuf:"bytes,2,rep,name=attributeExpressions,proto3" json:"attributeExpressions"`
}

func (x *ProductPackageMatchRuleInfo) Reset() {
	*x = ProductPackageMatchRuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_package_match_rule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductPackageMatchRuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductPackageMatchRuleInfo) ProtoMessage() {}

func (x *ProductPackageMatchRuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_package_match_rule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductPackageMatchRuleInfo.ProtoReflect.Descriptor instead.
func (*ProductPackageMatchRuleInfo) Descriptor() ([]byte, []int) {
	return file_product_package_match_rule_proto_rawDescGZIP(), []int{0}
}

func (x *ProductPackageMatchRuleInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductPackageMatchRuleInfo) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ProductPackageMatchRuleInfo) GetProductPackageID() string {
	if x != nil {
		return x.ProductPackageID
	}
	return ""
}

func (x *ProductPackageMatchRuleInfo) GetProductPackage() *ProductPackageInfo {
	if x != nil {
		return x.ProductPackage
	}
	return nil
}

func (x *ProductPackageMatchRuleInfo) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ProductPackageMatchRuleInfo) GetInitialValue() bool {
	if x != nil {
		return x.InitialValue
	}
	return false
}

func (x *ProductPackageMatchRuleInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ProductPackageMatchRuleInfo) GetAttributeExpressions() []*AttributeExpressionInfo {
	if x != nil {
		return x.AttributeExpressions
	}
	return nil
}

type QueryProductPackageMatchRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"sortConfig" form:"sortConfig"
	SortConfig string `protobuf:"bytes,3,opt,name=sortConfig,proto3" json:"sortConfig" uri:"sortConfig" form:"sortConfig"`
}

func (x *QueryProductPackageMatchRuleRequest) Reset() {
	*x = QueryProductPackageMatchRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_package_match_rule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductPackageMatchRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductPackageMatchRuleRequest) ProtoMessage() {}

func (x *QueryProductPackageMatchRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_package_match_rule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductPackageMatchRuleRequest.ProtoReflect.Descriptor instead.
func (*QueryProductPackageMatchRuleRequest) Descriptor() ([]byte, []int) {
	return file_product_package_match_rule_proto_rawDescGZIP(), []int{1}
}

func (x *QueryProductPackageMatchRuleRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryProductPackageMatchRuleRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryProductPackageMatchRuleRequest) GetSortConfig() string {
	if x != nil {
		return x.SortConfig
	}
	return ""
}

type QueryProductPackageMatchRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                           `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductPackageMatchRuleInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64                          `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64                          `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64                          `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryProductPackageMatchRuleResponse) Reset() {
	*x = QueryProductPackageMatchRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_package_match_rule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductPackageMatchRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductPackageMatchRuleResponse) ProtoMessage() {}

func (x *QueryProductPackageMatchRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_package_match_rule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductPackageMatchRuleResponse.ProtoReflect.Descriptor instead.
func (*QueryProductPackageMatchRuleResponse) Descriptor() ([]byte, []int) {
	return file_product_package_match_rule_proto_rawDescGZIP(), []int{2}
}

func (x *QueryProductPackageMatchRuleResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryProductPackageMatchRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryProductPackageMatchRuleResponse) GetData() []*ProductPackageMatchRuleInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryProductPackageMatchRuleResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryProductPackageMatchRuleResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryProductPackageMatchRuleResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllProductPackageMatchRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                           `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*ProductPackageMatchRuleInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllProductPackageMatchRuleResponse) Reset() {
	*x = GetAllProductPackageMatchRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_package_match_rule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProductPackageMatchRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductPackageMatchRuleResponse) ProtoMessage() {}

func (x *GetAllProductPackageMatchRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_package_match_rule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductPackageMatchRuleResponse.ProtoReflect.Descriptor instead.
func (*GetAllProductPackageMatchRuleResponse) Descriptor() ([]byte, []int) {
	return file_product_package_match_rule_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllProductPackageMatchRuleResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllProductPackageMatchRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllProductPackageMatchRuleResponse) GetData() []*ProductPackageMatchRuleInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductPackageMatchRuleDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code                         `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *ProductPackageMatchRuleInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetProductPackageMatchRuleDetailResponse) Reset() {
	*x = GetProductPackageMatchRuleDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_package_match_rule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductPackageMatchRuleDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductPackageMatchRuleDetailResponse) ProtoMessage() {}

func (x *GetProductPackageMatchRuleDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_package_match_rule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductPackageMatchRuleDetailResponse.ProtoReflect.Descriptor instead.
func (*GetProductPackageMatchRuleDetailResponse) Descriptor() ([]byte, []int) {
	return file_product_package_match_rule_proto_rawDescGZIP(), []int{4}
}

func (x *GetProductPackageMatchRuleDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetProductPackageMatchRuleDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductPackageMatchRuleDetailResponse) GetData() *ProductPackageMatchRuleInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_product_package_match_rule_proto protoreflect.FileDescriptor

var file_product_package_match_rule_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6d, 0x6f, 0x6d, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0,
	0x02, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x52, 0x0a,
	0x14, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x7f, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0xdf, 0x01, 0x0a, 0x24, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9a, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x9d, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_product_package_match_rule_proto_rawDescOnce sync.Once
	file_product_package_match_rule_proto_rawDescData = file_product_package_match_rule_proto_rawDesc
)

func file_product_package_match_rule_proto_rawDescGZIP() []byte {
	file_product_package_match_rule_proto_rawDescOnce.Do(func() {
		file_product_package_match_rule_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_package_match_rule_proto_rawDescData)
	})
	return file_product_package_match_rule_proto_rawDescData
}

var file_product_package_match_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_product_package_match_rule_proto_goTypes = []interface{}{
	(*ProductPackageMatchRuleInfo)(nil),              // 0: proto.ProductPackageMatchRuleInfo
	(*QueryProductPackageMatchRuleRequest)(nil),      // 1: proto.QueryProductPackageMatchRuleRequest
	(*QueryProductPackageMatchRuleResponse)(nil),     // 2: proto.QueryProductPackageMatchRuleResponse
	(*GetAllProductPackageMatchRuleResponse)(nil),    // 3: proto.GetAllProductPackageMatchRuleResponse
	(*GetProductPackageMatchRuleDetailResponse)(nil), // 4: proto.GetProductPackageMatchRuleDetailResponse
	(*ProductPackageInfo)(nil),                       // 5: proto.ProductPackageInfo
	(*AttributeExpressionInfo)(nil),                  // 6: proto.AttributeExpressionInfo
	(Code)(0),                                        // 7: proto.Code
}
var file_product_package_match_rule_proto_depIdxs = []int32{
	5, // 0: proto.ProductPackageMatchRuleInfo.productPackage:type_name -> proto.ProductPackageInfo
	6, // 1: proto.ProductPackageMatchRuleInfo.attributeExpressions:type_name -> proto.AttributeExpressionInfo
	7, // 2: proto.QueryProductPackageMatchRuleResponse.code:type_name -> proto.Code
	0, // 3: proto.QueryProductPackageMatchRuleResponse.data:type_name -> proto.ProductPackageMatchRuleInfo
	7, // 4: proto.GetAllProductPackageMatchRuleResponse.code:type_name -> proto.Code
	0, // 5: proto.GetAllProductPackageMatchRuleResponse.data:type_name -> proto.ProductPackageMatchRuleInfo
	7, // 6: proto.GetProductPackageMatchRuleDetailResponse.code:type_name -> proto.Code
	0, // 7: proto.GetProductPackageMatchRuleDetailResponse.data:type_name -> proto.ProductPackageMatchRuleInfo
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_product_package_match_rule_proto_init() }
func file_product_package_match_rule_proto_init() {
	if File_product_package_match_rule_proto != nil {
		return
	}
	file_mom_common_proto_init()
	file_product_package_proto_init()
	file_attribute_expression_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_product_package_match_rule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductPackageMatchRuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_package_match_rule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductPackageMatchRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_package_match_rule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductPackageMatchRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_package_match_rule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProductPackageMatchRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_package_match_rule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductPackageMatchRuleDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_package_match_rule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_product_package_match_rule_proto_goTypes,
		DependencyIndexes: file_product_package_match_rule_proto_depIdxs,
		MessageInfos:      file_product_package_match_rule_proto_msgTypes,
	}.Build()
	File_product_package_match_rule_proto = out.File
	file_product_package_match_rule_proto_rawDesc = nil
	file_product_package_match_rule_proto_goTypes = nil
	file_product_package_match_rule_proto_depIdxs = nil
}
